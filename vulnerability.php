<?php

/**
 * The plugin bootstrap file
 *
 * This file is read by WordPress to generate the plugin information in the plugin
 * Dashboard. This file also includes all of the dependencies used by the plugin,
 * registers the activation and deactivation functions, and defines a function
 * that starts the plugin.
 *
 * @link              https://upkepr.com
 * @since             1.0.0
 * @package           Vulnerability Detector
 *
 * @wordpress-plugin
 * Plugin Name:       Vulnerability Detector
 * Description:       "Vulnerability Detector" is a WordPress plugin that allows Upkepr applications to stay connected with the website.
 * Version:           1.0.5
 * Author:            Upkepr
 * Author URI:        https://upkepr.com/
 * License:           GPLv2 or later
 * License URI:       http://www.gnu.org/licenses/gpl-2.0.html
 * Text Domain:       vulnerability-detector
 * Domain Path:       /languages
 */

define('UPKPR_SECRET_KEY', 'upKeprSecret'); // secret key can be a random string  and keep in secret from anyone
define('UPKPR_ALGORITHM', 'SHA256');
define('UPKPR_LICENSE', true);

define('UPKPR_ENCODE_DECODE_CIPHERING', 'AES-128-CTR');
define('UPKPR_ENCODE_DECODE_OPTIONS', 0);
define('UPKPR_ENCODE_DECODE_IV', '1234567891011121');
define('UPKPR_ENCODE_DECODE_KEY', 'UPKKPERENCRYPTION');

define('UPKPR_MAINTENANCE_GET_DATA', 'https://app.upkepr.com');

define('UPKPR_VULNERABLITY_ENDPOINT', 'HcKseGp5xLz3opQrRA==');
define('UPKPR_VULNERABLITY_CONNECTION', 'connections');
define('UPKPR_VULNERABLITY_DATA', 'vulnerability_info');

/* Use Domain as the folder name */
$PluginTextDomain = "vulnerability-detector";

/* Register Hooks For Start And Deactivate */
register_activation_hook(__FILE__, 'UPKPR_upkepr_on_activate_this_plugin');
register_deactivation_hook(__FILE__, 'UPKPR_upkepr_on_deactivate_this_plugin');

// Uninstall hook
register_uninstall_hook(__FILE__, 'UPKPR_upkepr_on_uninstall_plugin');

global $origin_validationKey;
$origin_validationKey = get_option('upkeprvalidationkeycstm', true);

/* Constant */
define('UPKPR_UPKEPR_FS_PATH1', plugin_dir_path(__FILE__));
define('UPKPR_UPKEPR_WS_PATH1', plugin_dir_url(__FILE__));

function UPKPR_wpdocs_enqueue_custom_admin_style()
{
    wp_register_style('custom_wp_admin_css', UPKPR_UPKEPR_WS_PATH1 . 'css/style.css', false);
    wp_register_style('custom_wp_admin_css_enchancestyle', UPKPR_UPKEPR_WS_PATH1 . 'css/enchancestyle.css', false);
    wp_enqueue_style('custom_wp_admin_css');
    wp_enqueue_style('custom_wp_admin_css_enchancestyle');

    wp_enqueue_script('dataTables', UPKPR_UPKEPR_WS_PATH1 . 'js/dataTables.min.js', array('jquery'), '2.0.3', true);
    wp_enqueue_script('bundle', UPKPR_UPKEPR_WS_PATH1 . 'js/bootstrap.bundle.min.js', array('jquery'), '5.3.3', true);
    wp_enqueue_style('dataTables-style', UPKPR_UPKEPR_WS_PATH1 . 'css/dataTables.dataTables.min.css');


    wp_enqueue_style('bootstrap-css', 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css', array(), '5.3.3');
    wp_enqueue_style('font-awesome', 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css', array(), '6.5.2');

    // Localize the script here and register ajax
    wp_register_script('custom_wp_admin_js', UPKPR_UPKEPR_WS_PATH1 . 'js/upkepr_script.js', array('jquery'), '1.0', true);
    wp_enqueue_script('custom_wp_admin_js');
    wp_localize_script('custom_wp_admin_js', 'upkpr_ajax_object', array('upkpr_ajax_url' => admin_url('admin-ajax.php')));
}
add_action('admin_enqueue_scripts', 'UPKPR_wpdocs_enqueue_custom_admin_style');

/**
 * Upkepr Ajax setting
 */

add_action('wp_ajax_upkpr_ajax_action', 'upkpr_ajax_action_handler');
add_action('wp_ajax_nopriv_upkpr_ajax_action', 'upkpr_ajax_action_handler');
add_action('wp_ajax_upkpr_check_ajax_action', 'upkpr_check_ajax_action_handler');
add_action('wp_ajax_nopriv_upkpr_check_ajax_action', 'upkpr_check_ajax_action_handler');

/***********************Encrypt decrypted string by jwt_encode********************************/
if (!function_exists('UPKPR_encrypt')) {
    function UPKPR_encrypt($string)
    {
        return openssl_encrypt($string, UPKPR_ENCODE_DECODE_CIPHERING, UPKPR_ENCODE_DECODE_KEY, UPKPR_ENCODE_DECODE_OPTIONS, UPKPR_ENCODE_DECODE_IV);
    }
}

/***********************Decrypt encrypted string by jwt_encode********************************/
if (!function_exists('UPKPR_decrypt')) {
    function UPKPR_decrypt($string)
    {
        return openssl_decrypt($string, UPKPR_ENCODE_DECODE_CIPHERING, UPKPR_ENCODE_DECODE_KEY, UPKPR_ENCODE_DECODE_OPTIONS, UPKPR_ENCODE_DECODE_IV);
    }
}

/* Register Hooks activate */
if (!function_exists('UPKPR_upkepr_on_activate_this_plugin')) {
    function UPKPR_upkepr_on_activate_this_plugin()
    {
        $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()';
        $pass = array(); //remember to declare $pass as an array
        $alphaLength = strlen($alphabet) - 1; //put the length -1 in cache
        for ($i = 0; $i < 50; $i++) {
            $n = rand(0, $alphaLength);
            $pass[] = $alphabet[$n];
        }
        $finalkey = implode($pass); //turn the array into a string
        $key_already_exist = trim(get_option('upkeprvalidationkeycstm'));
        if (empty($key_already_exist)) {
            update_option('upkeprvalidationkeycstm', $finalkey);
        }
        upkepr_action_on_webhook('activate');
    }
}

/**
 * Regenerate key from admin form
 */
if (!function_exists('UPKPR_upkepr_regenerate_key')) {
    function UPKPR_upkepr_regenerate_key()
    {
        $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()';
        $pass = array(); //remember to declare $pass as an array
        $alphaLength = strlen($alphabet) - 1; //put the length -1 in cache
        for ($i = 0; $i < 50; $i++) {
            $n = rand(0, $alphaLength);
            $pass[] = $alphabet[$n];
        }
        $finalkey = implode($pass); //turn the array into a string
        update_option('upkeprvalidationkeycstm', $finalkey);
    }
}

/* Register Hooks deactivate */
if (!function_exists('UPKPR_upkepr_on_deactivate_this_plugin')) {
    function UPKPR_upkepr_on_deactivate_this_plugin()
    {
        // currently no action
        delete_option('upkeprvalidationkeycstm', '');
        delete_option('upkpr_vulnerability_theme');
        delete_option('upkpr_vulnerability_core');
        delete_option('upkpr_vulnerability_plugin');
        delete_option('upkpr_vulnerability_all');
        upkepr_action_on_webhook('deactivate');
    }
}

/* Register Hooks Unistallation */
function UPKPR_upkepr_on_uninstall_plugin()
{
    upkepr_action_on_webhook('uninstall');
}

/* for admin pages */
if (!function_exists('UPKPR_upkepr_wp_admin_menu')) {
    function UPKPR_upkepr_wp_admin_menu()
    {
        global $PluginTextDomain;
        // Register the parent menu.
        $menu = add_menu_page(
            __('Vulnerability Detector', $PluginTextDomain),
            __('Vulnerability Detector', $PluginTextDomain),
            'manage_options',
            'vulnerability-detector',
            'UPKPR_upekeper_display_my_menu'
        );
    }
}

add_action('admin_menu', 'UPKPR_upkepr_wp_admin_menu');

if (!function_exists('UPKPR_upekeper_display_my_menu')) {
    function UPKPR_upekeper_display_my_menu()
    {
        global $PluginTextDomain;
        if (!current_user_can('read')) {
            wp_die(__('You do not have sufficient permissions to access this page.', $PluginTextDomain));
        } else {
            //include(CWEB_FS_PATH1 . 'admin/settings.php');
            UPKPR_upekeper_adminsettingspage();
        }
    }
}

if (!function_exists('UPKPR_upekeper_adminsettingspage')) {
    function UPKPR_upekeper_adminsettingspage()
    {
        global $origin_validationKey;
        require plugin_dir_path(__FILE__) . 'adminpage.php';
    }
}

add_action('rest_api_init', function () {
    /* to check if key is valid */
    register_rest_route('upkepr-isKeyValid', 'key', array(
        'methods' => 'POST',
        'callback' => 'UPKPR_upkepr_isKeyValid',
        'permission_callback' => '__return_true',
    ));

    /* to check if key, domain and username is valid */
    register_rest_route('upkepr-is_keydomainusername_valid', 'data', array(
        'methods' => 'POST',
        'callback' => 'UPKPR_upkepr_isKeyDomainUsernameValid',
        'permission_callback' => '__return_true',
    ));

    /* to get all wp information data */
    register_rest_route('upkepr-wpinfo', 'wpinfo', array(
        'methods' => 'POST',
        'callback' => 'UPKPR_upkepr_wpinfo',
        'permission_callback' => '__return_true',
    ));

    /* to generate a new token */
    register_rest_route('upkepr-gettoken', 'byusername', array(
        'methods' => 'POST',
        'callback' => 'UPKPR_upkepr_getlogintoken',
        'permission_callback' => '__return_true',
    ));

    /* to get login url */
    register_rest_route('upkepr-getloginurl', 'byusername', array(
        'methods' => 'POST',
        'callback' => 'UPKPR_upkepr_getloginurl',
        'permission_callback' => '__return_true',
    ));

    /* internal api (not for app) */
    register_rest_route('upkepr-redirectnow', 'byusername', array(
        'methods' => 'GET',
        'callback' => 'UPKPR_validate_token_and_allow_redirect',
        'permission_callback' => '__return_true',
    ));

    /* Use Webhook to store vulnerabilities data */
    register_rest_route('upkepr-get-vulnerabilities', 'byusername', array(
        'methods' => 'POST',
        'callback' => 'UPKPR_validate_token_and_store_vulnerabilities',
        'permission_callback' => '__return_true',
    ));
});

if (!function_exists('UPKPR_upkepr_getuserid_frm_username')) {
    function UPKPR_upkepr_getuserid_frm_username($username)
    {
        $username = sanitize_text_field($username);
        $user = get_user_by('email', $username);
        if (!$user) {
            $user = get_user_by('login', $username);
        }

        if ($user) {
            $user_id = $user->ID;
            if ((!$user_id) || ($user_id == '0') || empty($user_id)) {
                return false;
            } else {
                return $user_id;
            }
        } else {
            return false;
        }
    }
}

if (!function_exists('UPKPR_upkepr_getlogintoken')) {
    function UPKPR_upkepr_getlogintoken()
    {
        $plugins_updates_array = array();
        $auth_header = apache_request_headers();
        $validationkey = $auth_header['Upkeprvalidationkey'];
        $upkeprvalidationdomain = $auth_header['Upkeprvalidationdomain'];

        $validation_message = UPKPR_upkepr_intrnl_func_verifyKeyDomainUsername();
        if ($validation_message === true) // Key, Username and Domain Verified
        {
            $posted_datapost = json_decode(file_get_contents('php://input'), true);
            $username = UPKPR_decrypt($posted_datapost['username']);
            $user_id = UPKPR_upkepr_getuserid_frm_username($username);
            $headers = array('alg' => 'HS256', 'typ' => 'JWT');
            $payload = array('domain' => $upkeprvalidationdomain, 'validationkey' => $validationkey, 'user_id' => $user_id, 'exp' => (time() + 30));

            $resttoken = UPKPR_upkepr_generaterandomtoken($headers, $payload, $user_id, UPKPR_SECRET_KEY);
            $resttoken_encrypt = UPKPR_encrypt($resttoken);
            $data = array('status' => '1', 'resttoken' => $resttoken_encrypt, 'username' => $username);
            return new WP_REST_Response($data, 200);
        } else {
            $data = array('status' => '0', 'message' => $validation_message);
            return new WP_REST_Response($data, 200);
        }
    }
}

/* Geneate token */
if (!function_exists('UPKPR_upkepr_generaterandomtoken')) {
    function UPKPR_upkepr_generaterandomtoken($headers, $payload, $user_id, $secret = 'secret')
    {
        $headers_encoded = UPKPR_base64url_encode(json_encode($headers));

        $payload_encoded = UPKPR_base64url_encode(json_encode($payload));

        $signature = hash_hmac(UPKPR_ALGORITHM, "$headers_encoded.$payload_encoded", UPKPR_SECRET_KEY, true);
        $signature_encoded = UPKPR_base64url_encode($signature);

        $jwt = "$headers_encoded.$payload_encoded.$signature_encoded";
        update_user_meta($user_id, 'upkprtkn', $jwt);
        return $jwt;
    }
}

/* Get header token */
if (!function_exists('UPKPR_get_bearer_token')) {
    function UPKPR_get_bearer_token()
    {
        $headers_data = UPKPR_get_authorization_header();
        $token_data = $headers_data['authorization'];

        // HEADER: Get the access token from the header
        if (!empty($token_data)) {
            if (preg_match('/Bearer\s(\S+)/', $token_data, $matches)) {
                return $matches[1];
            }
        }
        return null;
    }
}

/* get auth key */
if (!function_exists('UPKPR_get_authorization_header')) {
    function UPKPR_get_authorization_header()
    {
        $headers = array();
        $authorization = null;
        $sent_validationkey = null;
        $sent_domainname = null;

        if (isset($_SERVER['Authorization'])) {
            $authorization = trim(sanitize_text_field($_SERVER["Authorization"]));
            $sent_validationkey = trim(sanitize_text_field($_SERVER["Upkeprvalidationkey"]));
            $sent_domainname = trim(sanitize_text_field($_SERVER["Upkeprvalidationdomain"]));
        } else if (isset($_SERVER['HTTP_AUTHORIZATION'])) { //Nginx or fast CGI
            $authorization = trim(sanitize_text_field($_SERVER["HTTP_AUTHORIZATION"]));
            $sent_validationkey = trim(sanitize_text_field($_SERVER["HTTP_UPKEPRVALIDATIONKEY"]));
            $sent_domainname = trim(sanitize_text_field($_SERVER["HTTP_UPKEPRVALIDATIONDOMAIN"]));
        } else if (function_exists('apache_request_headers')) {
            $requestHeaders = apache_request_headers();
            // Server-side fix for bug in old Android versions (a nice side-effect of this fix means we don't care about capitalization for Authorization)
            $requestHeaders = array_combine(array_map('ucwords', array_keys($requestHeaders)), array_values($requestHeaders));
            if (isset($requestHeaders['Authorization'])) {
                $authorization = trim($requestHeaders['Authorization']);
                $sent_validationkey = trim($requestHeaders["Upkeprvalidationkey"]);
                $sent_domainname = trim($requestHeaders["Upkeprvalidationdomain"]);
            }
        }

        // authorization not found or modify header
        if (empty($authorization)) {
            $posted_datapost = json_decode(file_get_contents('php://input'), true);
            $username = UPKPR_decrypt($posted_datapost['username']);
            $user_id = UPKPR_upkepr_getuserid_frm_username($username);
            $authorization = get_user_meta($user_id, 'upkprtkn', true);
        }
        $headers = array('authorization' => $authorization, 'sent_validationkey' => $sent_validationkey, 'sent_domainname' => $sent_domainname);
        return $headers;
    }
}

if (!function_exists('UPKPR_validate_token_and_allow_redirect')) {
    function UPKPR_validate_token_and_allow_redirect()
    {
        $token_from_GET = sanitize_text_field($_GET['tkn']);
        $user_id = sanitize_text_field($_GET['usrid']);

        $is_jwt_valid = UPKPR_is_jwt_valid($token_from_GET);

        $token_from_db = get_user_meta($user_id, 'upkprtkn', true);

        if (($is_jwt_valid === true) && ($token_from_GET == $token_from_db) && (!empty($user_id)) && ($user_id != '0')) {
            // validate other parameters and redirect user
            $user = get_user_by('id', $user_id);
            clean_user_cache($user_id);
            wp_clear_auth_cookie();
            wp_set_current_user($user_id, $user->user_login);
            wp_set_auth_cookie($user_id, true, true);
            update_user_caches($user);
            //do_action( 'wp_login', $user->data->user_login );
            $admin_url = get_admin_url();

            if (is_user_logged_in() && is_front_page()) {
                wp_redirect($admin_url); # Using wp_safe_redirect
                exit;
            } else {
                wp_redirect(site_url());
                exit;
            }
        } else {
            if ($token_from_GET != $token_from_db) {
                return json_encode(array('error' => 'Token not mmatched'));
            }

            if ((!empty($user_id)) && ($user_id != '0')) {
                return json_encode(array('error' => 'UserId not matched'));
            }
        }

        exit;
    }
}

if (!function_exists('UPKPR_is_jwt_valid')) {
    function UPKPR_is_jwt_valid($jwt, $secret = 'secret')
    {
        // split the jwt
        $tokenParts = explode('.', $jwt);

        $header = base64_decode($tokenParts[0]);
        $payload = base64_decode($tokenParts[1]);
        $signature_provided = $tokenParts[2];

        // check the expiration time - note this will cause an error if there is no 'exp' claim in the jwt
        $expiration = json_decode($payload)->exp;
        $is_token_expired = ($expiration - time()) < 0;

        // build a signature based on the header and payload using the secret
        $base64_url_header = UPKPR_base64url_encode($header);
        $base64_url_payload = UPKPR_base64url_encode($payload);
        $signature = hash_hmac(UPKPR_ALGORITHM, $base64_url_header . "." . $base64_url_payload, UPKPR_SECRET_KEY, true);
        $base64_url_signature = UPKPR_base64url_encode($signature);

        // verify it matches the signature provided in the jwt
        $is_signature_valid = ($base64_url_signature === $signature_provided);

        if ($is_token_expired || !$is_signature_valid) {
            return false;
        } else {
            return true;
        }
    }
}

if (!function_exists('UPKPR_base64url_encode')) {
    function UPKPR_base64url_encode($data)
    {
        return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');
    }
}

if (!function_exists('UPKPR_upkepr_isKeyValid')) {
    function UPKPR_upkepr_isKeyValid()
    {
        $auth_header = apache_request_headers();
        $validationkey = UPKPR_decrypt($auth_header['Upkeprvalidationkey']);
        $upkeprvalidationdomain = $auth_header['Upkeprvalidationdomain'];

        if (UPKPR_upkepr_verifydomain($upkeprvalidationdomain) == false) {
            $data = array('status' => '0', 'message' => 'Domain not verified');
            return new WP_REST_Response($data, 200);
            exit;
        }

        global $origin_validationKey;
        if ($validationkey == $origin_validationKey) {
            $key_status = 'valid';
            $status = '1';
        } else {
            $key_status = 'Not valid';
            $status = '0';
        }

        $data = array('status' => $status, 'message' => 'Plugins Installed and Activated', 'keystatus' => $key_status);
        return new WP_REST_Response($data, 200);
    }
}

if (!function_exists('UPKPR_upkepr_isKeyDomainUsernameValid')) {
    function UPKPR_upkepr_isKeyDomainUsernameValid()
    {
        $validation_message = UPKPR_upkepr_intrnl_func_verifyKeyDomainUsername();
        if ($validation_message === true) {
            $data = array('status' => '1', 'message' => 'Key, Username and Domain Verified');
            return new WP_REST_Response($data, 200);
        } else {
            $data = array('status' => '0', 'message' => $validation_message);
            return new WP_REST_Response($data, 200);
        }
    }
}

if (!function_exists('UPKPR_upkepr_intrnl_func_verifyKeyDomainUsername')) {
    function UPKPR_upkepr_intrnl_func_verifyKeyDomainUsername()
    {
        $auth_header = apache_request_headers();
        $validationkey = UPKPR_decrypt($auth_header['Upkeprvalidationkey']);
        $upkeprvalidationdomain = $auth_header['Upkeprvalidationdomain'];

        if (UPKPR_upkepr_verifydomain($upkeprvalidationdomain) == false) {
            return 'Domain not verified';
            exit;
        }

        global $origin_validationKey;
        if ($validationkey != $origin_validationKey) {
            return 'Key not verified.';
            exit;
        }

        $posted_datapost = json_decode(file_get_contents('php://input'), true);
        //$username = $posted_datapost['username'];
        $username = UPKPR_decrypt($posted_datapost['username']);

        if (UPKPR_upkepr_isuserexist($username) == false) {
            return 'username not verified';
            exit;
        }

        return true;
    }
}

if (!function_exists('UPKPR_upkepr_wpinfo')) {
    function UPKPR_upkepr_wpinfo()
    {
        if (!function_exists('get_core_updates')) {
            require_once ABSPATH . '/wp-admin/includes/update.php';
        }

        $plugins_updates_array = array();
        $auth_header = apache_request_headers();
        // $validationkey = $auth_header['Upkeprvalidationkey'];
        $validationkey = UPKPR_decrypt($auth_header['Upkeprvalidationkey']);
        $upkeprvalidationdomain = $auth_header['Upkeprvalidationdomain'];

        if (UPKPR_upkepr_verifydomain($upkeprvalidationdomain) == false) {
            $data = array('status' => '0', 'message' => 'Domain not verified');
            return new WP_REST_Response($data, 200);
            exit;
        }

        global $origin_validationKey;
        if ($validationkey == $origin_validationKey) {
            $key_status = 'valid';
            $status = '1';

            /* wp core check */
            $wp_core_currntversion = get_bloginfo('version');
            $wp_core_updates_array = get_core_updates();
            if (isset($wp_core_updates_array[0]->version)) {
                $wp_core_updates_version = $wp_core_updates_array[0]->version;
            } else {
                $wp_core_updates_version = "errors in fetching updates";
            }

            if ($wp_core_currntversion == $wp_core_updates_version) {
                $need_wp_core_update = '0';
            } else {
                $need_wp_core_update = '1';
            }
            /* wp core check */

            /* plugins upate check */
            $plugin_info = UPKPR_upkepr_cstm_plugins_update_check();
            /* plugins upate check */

            /* plugins upate check */
            $themes_info = UPKPR_upkepr_cstm_theme_update_check();
            /* plugins upate check */

            $server = UPKPR_upkepr_cstm_get_server_details();

            $wordpress_info = array('old_version' => $wp_core_currntversion, 'latest_virsion' => $wp_core_updates_version);

            $data = array('status' => '1', 'wordpress_info' => $wordpress_info, 'plugin_info' => $plugin_info, 'themes_info' => $themes_info, 'server' => $server);
            return new WP_REST_Response($data, 200);
        } else {
            $data = array('status' => '0', 'message' => 'Plugins Installed and Activated', 'keystatus' => 'Not valid');
            return new WP_REST_Response($data, 200);
        }
    }
}

if (!function_exists('UPKPR_upkepr_cstm_plugins_update_check')) {
    function UPKPR_upkepr_cstm_plugins_update_check()
    {
        if (!function_exists('get_plugins')) {
            require_once ABSPATH . 'wp-admin/includes/plugin.php';
        }
        if (!function_exists('get_site_transient')) {
            require_once ABSPATH . 'wp-admin/includes/option.php';
        }

        $updates = get_site_transient('update_plugins');

        $plugins = get_plugins();

        $the_list = array();
        $activated_plugins = array();
        $deactivated_plugins = array();
        $i = 1;

        foreach ($plugins as $name => $plugin) {

            $the_list["plugins"][$i]["id"] = $name;
            $the_list["plugins"][$i]["name"] = $plugin["Name"];
            $the_list["plugins"][$i]["current_version"] = $plugin["Version"];
            if (isset($updates->response[$name])) {
                $the_list["plugins"][$i]["update"] = "yes";
                $update_data = array(
                    'slug' => $updates->response[$name]->slug,
                    'new_version' => $updates->response[$name]->new_version,
                    'url' => $plugin['PluginURI'],
                    'package' => $updates->response[$name]->package,
                    'name' => $plugin['Title'],
                );

                $plugin['update'] = $update_data;
                $the_list["plugins"][$i]["new_version"] = $updates->response[$name]->new_version;
                $update_future[] = $plugin;
                $update_future[$name] = $plugin;
            } else {
                $the_list["plugins"][$i]["update"] = "no";
            }

            if (is_plugin_active($name)) {
                $the_list["plugins"][$i]["active_status"] = 'activated';
                $activated_plugins[] = $name;
            } else {
                $the_list["plugins"][$i]["active_status"] = 'deactivated';
                $deactivated_plugins[] = $name;
            }

            $i++;
        }

        $plugin_info = array(
            'update_future' => $update_future,
            'plugins' => $plugins,
            'update_plugin' => $update_future,
            'actived_plugin' => $activated_plugins,
            'plugins_count' => count($plugins),
        );

        return $plugin_info;
    }
}

if (!function_exists('UPKPR_upkepr_cstm_theme_update_check')) {
    function UPKPR_upkepr_cstm_theme_update_check()
    {
        if (!function_exists('get_themes')) {
            require_once ABSPATH . 'wp-admin/includes/theme.php';
        }
        if (!function_exists('get_site_transient')) {
            require_once ABSPATH . 'wp-admin/includes/option.php';
        }
        $activated_theme = wp_get_theme();
        $updates = get_site_transient('update_themes');

        $themes = wp_get_themes();

        $the_list = array();
        $total_activated_themes = array();
        $total_deactivated_themes = array();
        $i = 1;

        $the_list["checked_revision"] = date("Y-m-d g:i A", intval($updates->last_checked));
        foreach ($themes as $name => $theme) {
            $theme_url = $theme->get('ThemeURI');
            $old_version = $theme["Version"];
            $latest_verison = @$updates->response[$name]['new_version'];
            $url = @$updates->response[$name]['url'];
            $TextDomain = $theme["TextDomain"];
            $Description = $theme["Description"];
            $ThemeName = $theme["Name"];
            $tags = $theme->get('Tags');
            $screen = $theme->get_screenshot();
            $Author = $theme["Author"];

            $the_list["themes"][$i]["id"] = $name;
            $the_list["themes"][$i]["name"] = $theme["Name"];
            $the_list["themes"][$i]["current_version"] = $theme["Version"];

            if (isset($updates->response[$name])) {
                $the_list["themes"][$i]["update"] = "yes";
                $the_list["themes"][$i]["new_version"] = $updates->response[$name]['new_version'];
                $update_data = $updates->response[$name];
                $update_data['extra'] = 'data';
                $update_data['changelog_url'] = $url;
                $update_data['licence'] = 'dev';
                $update_data['credentials'] = false;
                $update_data['ssl'] = false;

                $update_future[] = $update_data;
            } else {
                $the_list["themes"][$i]["update"] = "no";
            }

            if ($activated_theme == $theme["Name"]) {

                $total_activated_themes[] = $name;
                $status = 'Active';
            } else {
                $the_list["themes"][$i]["active_status"] = 'deactivated';
                $total_deactivated_themes[] = $name;
                $status = 'Deactivated';
            }

            $theme_details[] = array(
                'old_version' => $old_version,
                'latest_verison' => $latest_verison,
                'themeuri' => $theme_url,
                'url' => $url,
                'status' => $status,
                'screen' => $screen,
                'theme_name' => $ThemeName,
                'description' => $Description,
                'tags' => $tags,
                'Author' => $Author,
            );

            $i++;
        }

        $themes_info = array(
            'update_future' => $update_future,
            'info' => $theme_details,
            'themes_count' => count($themes),
        );

        return $themes_info;
    }
}

if (!function_exists('UPKPR_upkepr_cstm_get_server_details')) {
    function UPKPR_upkepr_cstm_get_server_details()
    {
        $server_details = array(
            'phpversion' => phpversion(),
            'HEADER' => sanitize_text_field($_SERVER),
            'usage_memory' => memory_get_usage($real_usage = false),
            'usage_memory_details' => 'Returns the amount of memory, in bytes, that is currently being allocated to your PHP script.',
            'mysql_version' => mysqli_get_client_info(),
        );

        return $server_details;
    }
}

if (!function_exists('UPKPR_upkepr_getloginurl')) {
    function UPKPR_upkepr_getloginurl()
    {
        $token = UPKPR_get_bearer_token();

        $is_jwt_valid = UPKPR_is_jwt_valid($token);
        if (!$is_jwt_valid) {
            $data = array('status' => '0', 'message' => 'Token not validated');
            return new WP_REST_Response($data, 200);
            exit;
        }

        $validation_message = UPKPR_upkepr_intrnl_func_verifyKeyDomainUsername();

        if ($validation_message === true) // Key, Username and Domain Verified
        {
            $key_status = 'valid';
            $status = '1';
            $posted_datapost = json_decode(file_get_contents('php://input'), true);
            $username = UPKPR_decrypt($posted_datapost['username']);

            if (!$user) {
                $user = get_user_by('email', $username);
            }
            if (!$user) {
                $user = get_user_by('login', $username);
            }

            if (!is_user_logged_in()) {
                if ($user) {
                    $user_id = $user->ID;

                    if ((!$user_id) || ($user_id == '0') || empty($user_id)) {
                        $data = array('status' => '0', 'message' => 'Wrong Username');
                        return new WP_REST_Response($data, 200);
                        exit;
                    }

                    $autologin_url = UPKPR_generate_login_url_with_token_userid($token, $user_id);
                    $autologin_url_encrypt = UPKPR_encrypt($autologin_url);
                    $data = array('status' => '1', 'autologin_url' => $autologin_url_encrypt);
                    return new WP_REST_Response($data, 200);
                    exit;
                } else {
                    $data = array('status' => '0', 'message' => 'Can not find this user');
                    return new WP_REST_Response($data, 200);
                    exit;
                }
            } else {
                $data = array('status' => '0', 'message' => 'User Already logged in');
                return new WP_REST_Response($data, 200);
                exit;
            }
        } else {
            $data = array('status' => '0', 'message' => $validation_message);
            return new WP_REST_Response($data, 200);
            exit;
        }
    }
}

if (!function_exists('UPKPR_generate_login_url_with_token_userid')) {
    function UPKPR_generate_login_url_with_token_userid($token, $user_id)
    {
        $url = site_url() . '/wp-json/upkepr-redirectnow/byusername/?usrid=' . $user_id . '&tkn=' . $token;
        return $url;
    }
}

if (!function_exists('UPKPR_upkepr_verifydomain')) {
    function UPKPR_upkepr_verifydomain($remote_domain)
    {
        $remote_domain = trim($remote_domain);
        $remote_domain = str_replace('\\', '', $remote_domain);
        $remote_domain = stripslashes($remote_domain);
        $remote_domain = ltrim($remote_domain, "http://");
        $remote_domain = ltrim($remote_domain, "https://");
        $remote_domain = ltrim($remote_domain, "www");
        $remote_domain = rtrim($remote_domain, "/");

        $this_blog_url = site_url();
        $this_blog_url = trim($this_blog_url);
        $this_blog_url = str_replace('\\', '', $this_blog_url);
        $this_blog_url = stripslashes($this_blog_url);

        $this_blog_url = ltrim($this_blog_url, "http://");
        $this_blog_url = ltrim($this_blog_url, "https://");
        $this_blog_url = ltrim($this_blog_url, "www");
        $this_blog_url = rtrim($this_blog_url, "/");

        if ($remote_domain == $this_blog_url) {
            return true;
        } else {
            return false;
        }
    }
}

if (!function_exists('UPKPR_upkepr_isuserexist')) {
    function UPKPR_upkepr_isuserexist($username)
    {
        $username = sanitize_text_field($username);
        $user = get_user_by('email', $username);

        if (!$user) {
            $user = get_user_by('login', $username);
        }

        if ($user) {
            $user_id = $user->ID;
            if ((!$user_id) || ($user_id == '0') || empty($user_id)) {
                return false;
            } else {
                return true;
            }
        } else {
            return false;
        }

        return false;
    }
}
if (!function_exists('UPKPR_validate_token_and_store_vulnerabilities')) {
    function UPKPR_validate_token_and_store_vulnerabilities()
    {
        $validation_message = UPKPR_upkepr_intrnl_func_verifyKeyDomainUsername();

        if ($validation_message === true) {
            $posted_datapost = json_decode(file_get_contents('php://input'), true);
            if (!isset($posted_datapost['upkepr_vulnerable_json'])) {
                $data = array('status' => '1', 'message' => 'upkepr_vulnerable_json field is required');
                return new WP_REST_Response($data, 200);
            }
            $upkepr_vulnerable_json = !empty($posted_datapost['upkepr_vulnerable_json']) ? json_encode($posted_datapost['upkepr_vulnerable_json']) : '';

            update_option('upkepr-maintenance-json', $upkepr_vulnerable_json);
            $data = array('status' => '1', 'message' => 'Data saved succeessfully');
            return new WP_REST_Response($data, 200);
        } else {
            $data = array('status' => '0', 'message' => $validation_message);
            return new WP_REST_Response($data, 200);
        }
    }
}

/**
 * Scan vulnerabilities
 */
if (!function_exists('UPKPR_get_wordpress_details')) {
    function UPKPR_get_wordpress_details()
    {
        $wp_core_updates_array = get_core_updates();
        $wp_core_currntversion = get_bloginfo('version');
        if (isset($wp_core_updates_array[0]->version)) {
            $wp_core_updates_version = $wp_core_updates_array[0]->version;
        }
        $plugin_info = UPKPR_upkepr_cstm_plugins_update_check();
        $themes_info = UPKPR_upkepr_cstm_theme_update_check();
        $server = UPKPR_upkepr_cstm_get_server_details();
        $wordpress_info = array('old_version' => $wp_core_currntversion, 'latest_virsion' => $wp_core_updates_version);
        $jsonWPDetails = json_encode(array('status' => '1', 'wordpress_info' => $wordpress_info, 'plugin_info' => $plugin_info, 'themes_info' => $themes_info, 'server' => $server));

        return $jsonWPDetails;
    }
}

if (!function_exists('UPKPR_mainetance_vulnerablilities')) {
    function UPKPR_mainetance_vulnerablilities($upkpr_Endpoint, $requestData)
    {
        // Send a GET request to the API
        $response = wp_remote_post(UPKPR_MAINTENANCE_GET_DATA . '/api/' . UPKPR_decrypt($upkpr_Endpoint), $requestData);
        if (is_wp_error($response)) {
            $error_message = $response->get_error_message();
            if (strpos($error_message, 'cURL error 60') !== false) {
                $requestData['sslverify'] = false;
                $response = wp_remote_post(UPKPR_MAINTENANCE_GET_DATA . '/api/' . UPKPR_decrypt($upkpr_Endpoint), $requestData);
            }
            if (is_wp_error($response)) {
                return json_encode(['type' => "404", 'status' => '0', 'message' => $error_message]);
            }
        }

        $responseBody = isset($response['body']) ? json_decode($response['body']) : [];
        return $responseBody;
    }
}

if (!function_exists('upkpr_ajax_action_handler')) {
    function upkpr_ajax_action_handler()
    {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            global $origin_validationKey;

            $type = isset($_POST['scan_type']) ? sanitize_text_field($_POST['scan_type']) : '';
            /**
             *Check Connection with Upkepr
             */
            $body_data = array(
                'key' => UPKPR_encrypt($origin_validationKey), 'project_url' => site_url(), 'service_type' => 'upkepr_get_vulnerabilities', 'api_url' => UPKPR_VULNERABLITY_CONNECTION
            );

            $rerDataArgs = array(
                //'headers'     => $headers,
                'body'        => $body_data,
                'timeout'     => 15,
                'httpversion' => '1.0',
                'data_format' => 'body',
            );

            $responseData = UPKPR_mainetance_vulnerablilities(UPKPR_VULNERABLITY_ENDPOINT, $rerDataArgs);
            if (!empty($responseData)) {
                if ($responseData->status == 1 && $responseData->msg_type == 'success') {
                    $body_data = array(
                        'key' => UPKPR_encrypt($origin_validationKey), 'project_url' => site_url(), 'service_type' => 'upkepr_get_vulnerabilities', 'api_url' => UPKPR_VULNERABLITY_DATA,
                        'scan_type' => $type, 'json_data' => UPKPR_get_wordpress_details()
                    );
                    $rerDataArgs = array(
                        'body'        => $body_data,
                        'timeout'     => 120,
                        'httpversion' => '1.0',
                        'data_format' => 'body',
                    );
                    $responseWPData = UPKPR_mainetance_vulnerablilities(UPKPR_VULNERABLITY_ENDPOINT, $rerDataArgs);
                    if (!empty($responseWPData)) {
                        if (isset($responseWPData->status) && $responseWPData->status == 1 && $responseWPData->msg_type == 'success') {
                            if (!empty($responseWPData->response)) {
                                update_option('upkpr_vulnerability_' . strtolower($type), json_encode((array)$responseWPData->response));
                                $htmlVulne = UPKPRRenderVulnerabiliy($type, json_encode((array)$responseWPData->response));
                                $response = json_encode(['type' => "get_details", 'status' => '1', 'data' => $responseWPData->response, 'html' => $htmlVulne]);
                            } else {
                                $response = json_encode(['type' => "404", 'status' => '0', 'message' => 'Something went wrong']);
                            }
                        }
                    } else {
                        $response = json_encode(['type' => "404", 'status' => '0', 'message' => $responseData->error]);
                    }
                } else {
                    if (isset($responseData->type) && $responseData->type == 'key_invalid') {
                        $response = json_encode(['type' => "key_invalid", 'status' => '0', 'message' => $responseData->error]);
                    } else {
                        $response = json_encode(['type' => "404", 'status' => '0', 'message' => $responseData->error]);
                    }
                }
            } else {
                $response = json_encode(['type' => "404", 'status' => '0', 'message' => $responseData->get_error_message()]);
            }
            echo $response;
            exit;
        } else {
            echo 'request not found';
        }
    }
}

if (!function_exists('upkpr_check_ajax_action_handler')) {
    function upkpr_check_ajax_action_handler()
    {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            global $origin_validationKey;
            //$origin_validationKey = 'rycLNLczYA!cMGLswsz5AUyt$xQAR@i!uJXP19Qa3w@#Xuwebr';

            $type = isset($_POST['scan_type']) ? sanitize_text_field($_POST['scan_type']) : '';
            /**
             *Check Connection with Upkepr
             */
            $body_data = array(
                'key' => UPKPR_encrypt($origin_validationKey), 'project_url' => site_url(), 'service_type' => 'upkepr_get_vulnerabilities', 'api_url' => UPKPR_VULNERABLITY_CONNECTION
            );

            $rerDataArgs = array(
                //'headers'     => $headers,
                'body'        => $body_data,
                'timeout'     => 15,
                'httpversion' => '1.0',
                'data_format' => 'body',
            );

            $responseData = UPKPR_mainetance_vulnerablilities(UPKPR_VULNERABLITY_ENDPOINT, $rerDataArgs);

            if (!empty($responseData)) {
                if ($responseData->status == 1 && $responseData->msg_type == 'success') {
                    $response = json_encode(['type' => "get_details", 'status' => '1', 'data' => $responseData->response]);
                } else {
                    if (isset($responseData->type) && $responseData->type == 'key_invalid') {
                        $response = json_encode(['type' => "key_invalid", 'status' => '0', 'message' => $responseData->error]);
                    } else {
                        $response = json_encode(['type' => "404", 'status' => '0', 'message' => $responseData->error]);
                    }
                }
            } else {
                $response = json_encode(['type' => "404", 'status' => '0', 'message' => $responseData->get_error_message()]);
            }
            echo $response;
            exit;
        } else {
            echo 'request not found';
        }
    }
}

if (!function_exists('UPKPRRenderVulnerabiliy')) {
    function UPKPRRenderVulnerabiliy($type, $jsonData)
    {
        $responseData = !empty($jsonData) ? json_decode($jsonData) : [];
       
        $responseDataVulnType = isset($responseData->{$type}) ? $responseData->{$type} : [];
        $responseDataPlan = isset($responseData->plan) ? $responseData->plan : '';
        ob_start(); // Start output buffering
        include UPKPR_UPKEPR_FS_PATH1 . 'upkepr_vulnerability.php'; // Include the template
        $html = ob_get_clean();
        return  $html;
    }
}

if (!function_exists('upkepr_action_on_webhook')) {
    function upkepr_action_on_webhook($actiontype)
    {
        $emailAddress = get_option('admin_email');
        $userDetails = get_user_by('email', $emailAddress);
        // $upkeprUserName = $userDetails ? @$userDetails->first_name . ' ' . @$userDetails->last_name : 'Unknown';
        $upkeprUserName = isset($userDetails->user_login) ? $userDetails->user_login : '';
        $data = [
            'event' => $actiontype, 'site_url' => get_site_url(), 'cms_plugin_type' =>'WP', 'name' => $upkeprUserName, 'email' => $emailAddress,
            'ip_address' => @$_SERVER['REMOTE_ADDR'], 'timestamp' => current_time('mysql'), 'service_type' => 'wp_plugin_webhook', 'api_url' => UPKPR_VULNERABLITY_DATA
        ];
        $rerDataArgs = array(
            'body' => $data, 'timeout' => 15, 'httpversion' => '1.0', 'data_format' => 'body',
        );
        UPKPR_mainetance_vulnerablilities(UPKPR_VULNERABLITY_ENDPOINT, $rerDataArgs);
    }
}

/* Health reports function */
function getFailedWarningPassedSpeed($lighthouseResults)
{

    $performanceCategory = isset($lighthouseResults->categories->performance) ? $lighthouseResults->categories->performance : '';

    $allAudits = isset($lighthouseResults->allAudits) ? $lighthouseResults->allAudits : '';
   
    $allAuditsA = $allAudits;
    
    $performanceCategoryA =  $performanceCategory;

    $auditRefs = $performanceCategoryA->auditRefs;

    $failedAudits = array_filter($auditRefs, function ($auditRef) use ($allAuditsA) {
        if ((gettype($allAuditsA->{$auditRef->id}->score) == 'integer' || gettype($allAuditsA->{$auditRef->id}->score) == 'double') && isset($allAuditsA->{$auditRef->id}->details) && getColorOfMetric($allAuditsA->{$auditRef->id}->score * 100) == 'squareRed' && !in_array($auditRef->id, commonAuditsToRemove())) {
            return $auditRef;
        }
    });

    $passedAudits = array_filter($auditRefs, function ($auditRef) use ($allAuditsA) {
        if (empty($allAuditsA->{$auditRef->id}->score) || getColorOfMetric($allAuditsA->{$auditRef->id}->score * 100) == 'bgGreen') {
            return $auditRef;
        }
    });

    $auditsWithWarning = array_filter($auditRefs, function ($auditRef) use ($allAuditsA) {
        if ((gettype($allAuditsA->{$auditRef->id}->score) == 'integer' || gettype($allAuditsA->{$auditRef->id}->score) == 'double') && isset($allAuditsA->{$auditRef->id}->details)  && getColorOfMetric($allAuditsA->{$auditRef->id}->score * 100) == 'squareYellow' && !in_array($auditRef->id, commonAuditsToRemove())) {
            return $auditRef;
        }
    });

    $failedAuditIds = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $failedAudits);

    $passedAuditIds = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $passedAudits);

    $auditsWithWorningIds = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $auditsWithWarning);

    $totalfailedObject = [];
    $totalWarningObject = [];
    foreach ($allAuditsA as $keyall => $allAuditsValue) {
        if (in_array($keyall, $failedAuditIds)) {
            $totalfailedObject[] = $allAuditsValue;
        } else if (in_array($keyall, $auditsWithWorningIds)) {
            $totalWarningObject[] = $allAuditsValue;
        }
    }
    $icount = 0;
    $totalfailedCount = 0;
    $totalWarningCount = 0;

    foreach ($auditRefs as $keyallCountKey => $keyallCount) {
        if (isset($keyallCount->relevantAudits)) {
            foreach ($failedAuditIds as $failedValue) {
                if ($keyallCount->id == 'first-contentful-paint' && isset($auditRefs[0]->relevantAudits) && in_array($failedValue, $auditRefs[0]->relevantAudits)) {
                    $totalfailedCount += 1;
                    if (isset($auditRefs[1]->relevantAudits) && in_array($failedValue, $auditRefs[1]->relevantAudits)) {
                        $totalfailedCount += 1;
                    }
                } elseif (in_array($failedValue, $keyallCount->relevantAudits)) {
                    $totalfailedCount += 1;
                }
            }

            foreach ($auditsWithWorningIds as $warningValue) {
                if ($keyallCount->id == 'first-contentful-paint' && isset($auditRefs[0]->relevantAudits) && in_array($warningValue, $auditRefs[0]->relevantAudits)) {
                    $totalWarningCount += 1;
                    if (isset($auditRefs[1]->relevantAudits) && in_array($warningValue, $auditRefs[1]->relevantAudits)) {
                        $totalWarningCount += 1;
                    }
                } elseif (in_array($warningValue, $keyallCount->relevantAudits)) {
                    $totalWarningCount += 1;
                }
            }
        }
    }

    return ([
        'failed' => $totalfailedCount,
        //'failed'=>count($failedAuditIds),
        'failedDetails' => $totalfailedObject,
        //'warning'=>count($auditsWithWorningIds),
        'warning' => $totalWarningCount,
        'warningDetails' => $totalWarningObject,
        'passed' => count($passedAuditIds),
        'performanceRefs' => $auditRefs
    ]);
}

/**** RECOMDATION CATEGORY *****/
function getRecommendationCategoriesData($lighthouseResults)
{

    $allAudits = $lighthouseResults->allAudits;
    $categories = $lighthouseResults->categories;

    $allAuditsA = isset($allAudits) ? $allAudits : '';

    if (empty($allAuditsA)) {
        return [];
    }

    $performanceCategoryA = isset($categories->performance) ? $categories->performance : [];
    $performanceCategorySEO = isset($categories->seo) ? $categories->seo : [];
    $performanceCategoryABest = isset($categories->{'best-practices'}) ? $categories->{'best-practices'} : [];
    $performanceCategoryAccess = isset($categories->accessibility) ? $categories->accessibility : [];

    $auditRefs = array_merge($performanceCategoryA->auditRefs, $performanceCategorySEO->auditRefs, $performanceCategoryABest->auditRefs, $performanceCategoryAccess->auditRefs);

    $speedAudits = array_filter($performanceCategoryA->auditRefs, function ($auditRef) use ($allAuditsA) {
        if ((gettype($allAuditsA->{$auditRef->id}->score) == 'integer' || gettype($allAuditsA->{$auditRef->id}->score) == 'double') && isset($allAuditsA->{$auditRef->id}->details) && ($allAuditsA->{$auditRef->id}->score * 100) < 90  && !in_array($auditRef->id, commonAuditsToRemove())) {
            return $auditRef;
        }
    });

    $seoAudits = array_filter($performanceCategorySEO->auditRefs, function ($auditRef) use ($allAuditsA) {
        if ((gettype($allAuditsA->{$auditRef->id}->score) == 'integer' || gettype($allAuditsA->{$auditRef->id}->score) == 'double') && isset($allAuditsA->{$auditRef->id}->details) && ($allAuditsA->{$auditRef->id}->score * 100) < 90  && !in_array($auditRef->id, commonAuditsToRemove())) {
            return $auditRef;
        }
    });

    $pageStAudits = array_filter($performanceCategoryABest->auditRefs, function ($auditRef) use ($allAuditsA) {
        if ((gettype($allAuditsA->{$auditRef->id}->score) == 'integer' || gettype($allAuditsA->{$auditRef->id}->score) == 'double') && isset($allAuditsA->{$auditRef->id}->details) && ($allAuditsA->{$auditRef->id}->score * 100) < 90  && !in_array($auditRef->id, commonAuditsToRemove())) {
            return $auditRef;
        }
    });

    $accessAudits = array_filter($performanceCategoryAccess->auditRefs, function ($auditRef) use ($allAuditsA) {
        if ((gettype($allAuditsA->{$auditRef->id}->score) == 'integer' || gettype($allAuditsA->{$auditRef->id}->score) == 'double') && isset($allAuditsA->{$auditRef->id}->details) && ($allAuditsA->{$auditRef->id}->score * 100) < 90  && !in_array($auditRef->id, commonAuditsToRemove())) {
            return $auditRef;
        }
    });

    $passedAudits = array_filter($auditRefs, function ($auditRef) use ($allAuditsA) {
        if ((empty($allAuditsA->{$auditRef->id}->score) || getColorOfMetric($allAuditsA->{$auditRef->id}->score * 100) == 'bgGreen') && !in_array($auditRef->id, commonAuditsToRemove())) {
            return $auditRef;
        }
    });

    $speedAudits = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $speedAudits);

    $seoAudits = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $seoAudits);

    $pageStAudits = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $pageStAudits);

    $accessAudits = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $accessAudits);

    $passedAuditIds = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $passedAudits);

    $speed = [];
    $seo = [];
    $page = [];
    $acc = [];

    foreach ($allAuditsA as $keyall => $allAuditsValue) {
        if (in_array($keyall, $speedAudits)) {
            $speed[] = $allAuditsValue;
        } else if (in_array($keyall, $seoAudits)) {
            $seo[] = $allAuditsValue;
        } else if (in_array($keyall, $pageStAudits)) {
            $page[] = $allAuditsValue;
        } else if (in_array($keyall, $accessAudits)) {
            $acc[] = $allAuditsValue;
        }
    }
    return ([
        'performance' => $speed,
        'seo' => $seo,
        'accessibility' => $acc,
        'page_structure' => $page,
        'passed' => count($passedAuditIds)
    ]);
}
/**** RECOMDATION CATEGORY ENDS *****/

/****SEO PASSED DATA*****/
function getSeoPassedData($lighthouseResults)
{
    foreach ($lighthouseResults as $audValue) {
        if (isset($audValue->categories))
            $categories = $audValue->categories;

        if (isset($audValue->allAudits))
            $allAudits = $audValue->allAudits;
    }

    $allAuditsA = isset($allAudits) ? $allAudits : '';

    if (empty($allAuditsA)) {
        return [];
    }
    $performanceCategorySEO = isset($categories->seo) ? $categories->seo : [];
    $seoAudits = array_filter($performanceCategorySEO->auditRefs, function ($auditRef) use ($allAuditsA) {
        if ((!empty($allAuditsA->{$auditRef->id}->score) || getColorOfMetric($allAuditsA->{$auditRef->id}->score * 100) == 'bgGreen') && !in_array($auditRef->id, commonAuditsToRemove())) {
            return $auditRef;
        }
    });
    $seoAudits = array_map(function ($auditRef) {
        return $auditRef->id;
    }, $seoAudits);
    $seo = [];
    foreach ($allAuditsA as $keyall => $allAuditsValue) {
        if (in_array($keyall, $seoAudits)) {
            $seo[] = $allAuditsValue;
        }
    }
    return $seo;
}
/****SEO PASSED DATA ENDS*****/

/****GET IOCON COLOR *****/
function getIconColor($score)
{
    if ($score < 0.9  && $score >= 0.5) {
        return "tbliIconOrange";
    } elseif ($score < 0.5  && $score >= 0) {
        return "tbliIconRed";
    } else {
        return "tbliIconGreen";
    }
}
/****GET IOCON COLOR ENDS *****/

/*****FORMAT LINKS  *****/
function formatTextWithLinks($inputText)
{
    $formattedText = preg_replace_callback(
        '/\[(.*?)\]\((.*?)\)/',
        function ($matches) {
            $anchorText = $matches[1];
            $href = $matches[2];
            return $anchorText;
        },
        $inputText
    );
    // Wrap the remaining text in <p> tags
    $formattedText = '<p>' . $formattedText . '</p>';

    return $formattedText;
}
/*****FORMAT LINKS  ENDS *****/

/****GET AUDITS *****/
function getAuditsdetailsItems($speedAdvanceDataValue, $project_url)
{
?>


    <div class="cstm-tab-content mcbBlockText <?= getSectionColor(isset($speedAdvanceDataValue->score) ? $speedAdvanceDataValue->score : 0) ?>">
        <?php if (isset($speedAdvanceDataValue->details->headings)) : ?>
            <table class="table table-striped">
                <tbody>
                    <tr>
                        <?php foreach ($speedAdvanceDataValue->details->headings as $headValue) : ?>
                            <th scope="col"><?= isset($headValue->label) ? $headValue->label : '' ?></th>
                        <?php endforeach; ?>
                    </tr>
                    <?php $indexRow = 0;
                    foreach ($speedAdvanceDataValue->details->items as $itemValue) : ?>
                        <tr class="<?= ($indexRow >= 2) ? 'hide-rows-more ' . $speedAdvanceDataValue->id : '' ?>">
                            <?php foreach ($speedAdvanceDataValue->details->headings as $headinValue) : ?>
                                <td>
                                    <?php $valueType = $headinValue->valueType;
                                    $keyIndex = !empty($headinValue->key) ? $headinValue->key : 'subItems'; ?>
                                    <?php if (isset($itemValue->{$keyIndex}) && !empty($itemValue) && gettype($itemValue->{$keyIndex}) == 'string') : ?>
                                        <?php if ($keyIndex == 'url' && $itemValue->{$keyIndex} != 'Unattributable') : ?>
                                            <a title="<?= $itemValue->{$keyIndex} ?>" href="<?= $itemValue->{$keyIndex} ?>" target="_blank"><?= str_replace($project_url, '...', $itemValue->{$keyIndex}) ?>
                                            </a>
                                        <?php else : ?>
                                            <?= $itemValue->{$keyIndex} ?>
                                        <?php endif; ?>
                                    <?php elseif (isset($itemValue->{$keyIndex}) && !empty($itemValue) && (gettype($itemValue->{$keyIndex}) == 'integer' || gettype($itemValue->{$keyIndex}) == 'double')) : ?>
                                        <?php if ($keyIndex == "totalBytes") : ?>
                                            <?= !empty($itemValue->{$keyIndex}) ? number_format($itemValue->{$keyIndex} / 1024) . ' KiB' : 0 . ' KiB'; ?>
                                        <?php elseif ($valueType == 'ms') : ?>
                                            <?= !empty($itemValue->{$keyIndex}) ? number_format($itemValue->{$keyIndex}, 2) . ' ms' : 0 . ' ms'; ?>
                                        <?php else : ?>
                                            <?= !empty($itemValue->{$keyIndex}) ? number_format($itemValue->{$keyIndex}, 2) : 0; ?>
                                        <?php endif; ?>
                                    <?php else : ?>
                                        <?php
                                        $nodeSnippet = $nodeLabel = null;
                                        if ($keyIndex == "node" && isset($itemValue->node) && !empty($itemValue->node)) :
                                            $nodeSnippet = !empty($itemValue->node->snippet) ? $itemValue->node->snippet : '';
                                            $nodeLabel = $itemValue->node->nodeLabel;
                                        ?>
                                            <div class="spnipt">
                                                <div>
                                                    <p><?= htmlspecialchars($nodeSnippet) ?></p>
                                                    <p><?= htmlspecialchars($nodeLabel) ?></p>
                                                </div>
                                            </div>
                                        <?php elseif (isset($itemValue->sourceLocation) && !empty($itemValue->sourceLocation)) :
                                            $nodeSnippet = !empty($itemValue->sourceLocation->url) ? $itemValue->sourceLocation->url : '';
                                        ?>
                                            <a title="<?= $nodeSnippet ?>" href="<?= $nodeSnippet ?>" target="_blank"><?= substr($nodeSnippet, -10) ?> </a>
                                        <?php elseif ($keyIndex == "subItems") : ?>
                                            <?php foreach ($itemValue->{$keyIndex}->items as $value) {
                                                echo isset($value->animation) ? $value->animation : '' . "\n";
                                            } ?>
                                        <?php elseif ($keyIndex == "source") : ?>
                                            <?= isset($itemValue->{$keyIndex}->url) ? $itemValue->{$keyIndex}->url : '' . "\n"; ?>
                                        <?php elseif (isset($itemValue->{$keyIndex}) && isset($itemValue->{$keyIndex}) && !empty($itemValue->{$keyIndex}) && gettype($itemValue->{$keyIndex}) == 'object') : ?>
                                            <p><?= !empty(@$itemValue->{$keyIndex}->value) ? @$itemValue->{$keyIndex}->value : '' ?></p>
                                        <?php elseif (isset($itemValue->{$keyIndex}) && isset($itemValue->{$keyIndex}) && !empty($itemValue->{$keyIndex})) : ?>
                                            <div class="spnipt">
                                                <div>
                                                    <p><?= htmlspecialchars(!empty($itemValue->{$keyIndex}->snippet) ? $itemValue->{$keyIndex}->snippet : '') ?></p>
                                                    <p><?= htmlspecialchars($itemValue->{$keyIndex}->nodeLabel) ?></p>
                                                </div>
                                            </div>
                                        <?php else : ?>
                                            <?= isset($itemValue->{$keyIndex}->value) ? $itemValue->{$keyIndex}->value : 'No Found ' ?>
                                        <?php endif; ?>
                                    <?php endif; ?>
                                </td>
                            <?php endforeach; ?>
                        </tr>
                        <?php $indexRow++;

                        //if ($indexRow > 2):  endif;
                    endforeach;
                    ?>
                </tbody>
            </table>

            <?php if ($indexRow > 2) :
            ?>
                <div style="padding-top: 16px;">
                <a href="javascript:void(0)" class="see-full-list hiderow-button-click" data-targeitem="<?=$speedAdvanceDataValue->id?>">See Full List <i class="fa-solid fa-plus"></i></a>
                </div>
            <?php endif; ?>
        <?php endif; ?>
    </div>
<?php
}
/****GET AUDITS ENDS *****/

###comment is missing
function getMetricDataForPerf($lighthouseData)
{
    $pformanceAuditsP = $lighthouseData->categories;
    $allAudits = $lighthouseData->allAudits;
    $pformanceAudits = isset($pformanceAuditsP->performance->auditRefs) ? $pformanceAuditsP->performance->auditRefs : [];

    $metricAudits = [];
    foreach ($pformanceAudits as $perfValue) {
        if ((isset($perfValue->group) && $perfValue->group == 'metrics') || $perfValue->id == 'interactive') {
            $metricAudits[] = $allAudits->{$perfValue->id};
        }
    }
?>
    <!-- First Contentful Paint -->
    <div class="web-vitals-container">
        <?php
        $counter = 0;
        foreach ($metricAudits as $metky => $metric) :
            if ($counter % 3 == 0 && $counter != 0) {
                echo '<div style="clear: both;"></div>'; // Clear float every 3 items to ensure a new row
            }
        ?>
            <div class="web-vitals-list">
                <div class="web-vitals-header">
                    <span><img src="<?php echo esc_html(UPKPR_UPKEPR_WS_PATH1); ?>/images/speed-meter.png"></span>
                    <div class="web-vital-right">
                        <h4 class="<?= getColorOfText($metric->score * 100) ?>"><?= $metric->displayValue ?></h4>
                        <h6><?= $metric->title ?></h6>
                    </div>
                </div>
                <p><?= isset($metric->description) ? substr($metric->description, 0, strpos($metric->description, "[Learn")) : ''; ?></p>
            </div>
        <?php
            $counter++;
        endforeach;
        ?>
    </div>
<?php }

/*****GET COLOER FROM METRIC  *****/
function getColorOfMetric($number)
{
    if (0 <= $number &&  $number <= 49) {
        return "squareRed";
    } else if (49 < $number &&  $number <= 89) {
        return "squareYellow";
    } else if (89 < $number &&  $number <= 100) {
        return "bgGreen";
    } else {
        return 'squareRed';
    }
}
/*****GET COLOER FROM METRIC  *****/

###comment is missing
function commonAuditsToRemove()
{
    return [
        'speed-index', 'interactive', 'diagnostics', 'metrics', 'screenshot-thumbnails', 'final-screenshot',
        'total-blocking-time', 'largest-contentful-paint', 'first-contentful-paint', 'cumulative-layout-shift'
    ];
}
/****GET SECTION COLOR *****/
function getSectionColor($score)
{
    if ($score < 0.9  && $score >= 0.5) {
        return "mcbBlockOrange";
    } elseif ($score < 0.5  && $score >= 0) {
        return "mcbBlockRed";
    } else {
        return "mcbBlockGrey";
    }
}
/****GET SECTION COLOR ENDS *****/

/*****GET COLOER OD TEXT  *****/
function getColorOfText($number)
{
    if (0 < $number &&  $number <= 49) {
        return "colorRed";
    } else if (49 < $number &&  $number <= 89) {
        return "colorYellow";
    } else if (89 < $number &&  $number <= 100) {
        return "colorGreen";
    } else {
        return 'colorRed';
    }
}
/*****GET COLOER OD TEXT ENDS  *****/

/* How to ficx HTML */
function getHtmlHowtoFix() {
    return [
        'viewport' => "Third-party code can significantly impact load performance. Limit the number of redundant third-party providers and try to load third-party code after your page has primarily finished loading.",
        
        'third-party-summary' => "<h2>Loading Third-Party JavaScript.</h2>
        <p>Third-party scripts provide a wide range of useful functionality, making the web more dynamic, interactive, and interconnected. These scripts may be crucial to your website's functionality or revenue stream. But third-party scripts also come with <strong>many risks</strong> that should be taken into consideration to <strong>minimize their impact</strong> while still providing value.</p>
        <p>Why do you need to be <code>careful</code> about third-party scripts?</p>
        <ul><li>They can be a <strong>performance</strong> concern</li><li>They can be a <strong>privacy</strong> concern</li><li>They might be a <strong>security</strong> concern</li><li>They can be <strong>unpredictable</strong> and change without you knowing</li><li>They can have <strong>unintended consequences</strong></li></ul>
        <p>Examples of third-party scripts include:</p>
        ".'<div class="mcbBlockText mcbBlockGreen"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>560<span class="token punctuation">"</span></span>  <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>315<span class="token punctuation">"</span></span>  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.youtube.com/embed/mo8thg5XGV0<span class="token punctuation">"</span></span>  <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>  <span class="token attr-name">allow</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>autoplay; encrypted-media<span class="token punctuation">"</span></span>  <span class="token attr-name">allowfullscreen</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span></div>'.
        '<p>One example of this is the YouTube video player embed script that allows you to embed a video into your page.</p>',
        
        'font-display' => '<h2>Use <link rel="preload" as="font">to fetch your font files earlier. </h2>
        <div class="table-wrapper"><table class="table"><thead><tr><th>Before</th><th>After</th></tr></thead>
        <tbody><tr><td><span">
        <div class="mcbBlockText mcbBlockGreen">
        @font-face {
            font-family: Helvetica;
        }
        </div></span></td><td ><span ><div class="mcbBlockText mcbBlockGreen">
        @font-face {
            font-family: Helvetica;
            <strong>font-display: swap;</strong>
        }
        </div></span></td></tr></tbody></table><p><code>font-display</code> is an API for specifying font display strategy. <code>swap</code> tells the browser that text using this font should be displayed immediately using a system font. Once the custom font is ready, the system font is swapped out.</p></div>',
        
        'render-blocking-resources' => '<h2>Thre are two types of render-blocking URLs: scripts and stylesheets</h2>
        <p>A <code>'.htmlspecialchars('<script>').'</code> tag that:</p>
        <ul>
        <li>Is in the <code><head></code> of the document.</li>
        <li>Does not have a <code>defer</code> attribute.</li>
        <li>Does not have an <code>async</code> attribute.</li>
        </ul>
        <p>A <code>'.htmlspecialchars('<link rel="stylesheet">').'</code> tag that:</p>
        <ul><li>Does not have a <code>disabled</code> attribute. When this attribute is present, the browser does not download the stylesheet.</li>
        <li>Does not have a <code>media</code> ' . "attribute that matches the user's device specifically" . '<code> media="all"</code> is considered render-blocking.</li></ul>
        ' . "<p>Let's consider some hands-on examples for css :</p>" . '
        <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<link href="style.css" rel="stylesheet" />
            <link href="style.css" rel="stylesheet" media="all" />
            <link href="portrait.css" rel="stylesheet" media="orientation:portrait" />
            <link href="print.css" rel="stylesheet" media="print" />').'</pre></div>',
        
        'total-byte-weight' => '<h2>How to reduce payload size</h2> 
        Aim to keep your total byte size below 1,600 KiB. This target is based on the amount of data that can be theoretically downloaded on a 3G connection while still achieving a Time to Interactive of 10 seconds or less.
        <p>Here are some ways to keep payload size down:</p>
        <ul>
        <li>' . "Defer requests until they're needed. See the" . '<code>  PRPL Pattern</code> for one possible approach.</li>
        <li>Optimize requests to be as small as possible. Possible techniques include:
        <ul>
        <li> Minify and compress network payloads.</li>
        <li> Use WebP instead of JPEG or PNG for your images.</li>
        <li> Set the compression level of JPEG images to 85.</li>
        </ul>
        </li>
        <li>' .
        "Cache requests so that the page doesn't re-download the resources on repeat visits." . ' (See the Network reliability landing page to learn how caching works and how to implement it.)</li></ul>',
        
        'unsized-images' => "<h2>Optimize Cumulative Layout Shift</h2>
        <p>The most common causes of a poor CLS are:</p>          
        <ul><li>Images without dimensions</li><li>Ads, embeds, and iframes without dimensions</li><li>Dynamically injected content such as ads, embeds, and iframes without dimensions</li><li>Web fonts</li></ul>
        <p>If your image is in a container, you can use CSS to resize the image to the width of this container. We set height: auto; to avoid the image height being a fixed value (for example 360px).</p>" .
        '<div class="mcbBlockText mcbBlockGreen"> img {
            height: auto;
            width: 100%;
        }</div>',
        
        'modern-image-formats' => '<h2>Why serve images in AVIF or WebP format?</h2><p>AVIF and WebP are image formats that have superior compression and quality characteristics compared to their older JPEG and PNG counterparts. Encoding your images in these formats rather than JPEG or PNG means that they will load faster and consume less cellular data.</p>' .
        '<h3>Before:</h3><div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<img src="flower.jpg" alt="">').'</div><h3>After:</h3>
        <div class="mcbBlockText mcbBlockGreen">
        '.htmlspecialchars('<picture>
            <source type="image/webp" srcset="flower.webp">
            <source type="image/jpeg" srcset="flower.jpg">
            <img src="flower.jpg" alt="">
            </picture>').'</div>',
        
        'uses-long-cache-ttl' => '<p>Configure your server to return the <code>Cache-Control</code> HTTP response header:</p>
        <div class="mcbBlockText mcbBlockGreen">
        Cache<span class="operator token">-</span>Control<span class="operator token">:</span> max<span class="operator token">-</span>age<span class="operator token">=</span><span class="number token">31536000</span>
        </div>' .
        '<p>The <code>max-age</code> directive tells the browser how long it should cache the resource in seconds.</p><p> This example sets the duration to <code>31536000</code>, which corresponds to 1 year: 60&nbsp;seconds × 60&nbsp;minutes × 24&nbsp;hours × 365&nbsp;days = 31536000&nbsp;seconds.</p>',
        
        'unused-javascript' => '<h2>How to remove unused JavaScript.</h2><p> </p>
        <ul>
        <li>Conduct a code review to identify and remove redundant or unused code.</li>
        <li>Use a build system and tree shaking to automate the removal of unused code.</li>
        <li>Employ linters and code coverage analysis tools to help identify and remove dead code.</li>
        <li>Remove unused dependencies and optimize third-party libraries.</li><li>Regularly maintain and optimize your codebase to prevent code bloat.</li>
        <li>Test your application thoroughly after making changes to ensure it still works as expected.</li>
        </ul>',
        
        'mainthread-work-breakdown' => '<h2>How to minimize main thread work</h2><p>The sections below are organized based on the categories that reports.
        See The anatomy of a frame for an overview of how Chromium renders web pages.</p>' .
        '<ul>
        <li>Script evaluation.</li>
        <li>Style and layout.</li>
        <li>Rendering.</li>
        <li>Parsing HTML and CSS.</li>
        <li>Script parsing and compilation.</li>
        <li>Garbage collection</li>
        </ul>',
        
        'bootup-time' => '<h2>How to speed up JavaScript execution</h2>
        <ul>
        <li>Only send the code that your users need by implementing code splitting.</li>
        <li>Minify and compress your code.</li>
        <li>Remove unused code.</li>
        <li>Reduce network trips by caching your code with the PRPL pattern.</li>
        </ul>',
        'dom-size' => '<h2>How to optimize the DOM size</h2><p>' . "In general, look for ways to create DOM nodes only when needed, and destroy nodes when they're no longer needed." .
        '</p><p>' . "If you're currently shipping a large DOM tree, try loading your page and manually noting which nodes are displayed. Perhaps you can remove the undisplayed nodes from the initially loaded document and only create them after a relevant user interaction, such as a scroll or a button click." . '</p>' .
        "<p>If you create DOM nodes at runtime, Subtree Modification DOM Change Breakpoints can help you pinpoint when nodes get created.</p><p>If you can't avoid a large DOM tree, another approach for improving rendering performance is simplifying your CSS selectors. See Google's Reduce the Scope and Complexity of Style Calculations for more information.</p>",
        
        'uses-responsive-images' => '<h2>Strategies for properly sizing images</h2><p>' . "Ideally, your page should never serve images that are larger than the version that's rendered on the user's screen. Anything larger than that just results in wasted bytes and slows down page load time." .
        '<div class="mcbBlockText mcbBlockGreen"><table class="table"><thead><tr><th><strong>Before</strong></th><th><strong>After</strong></th></tr></thead><tbody><tr><td>&lt;img src="flower-large.jpg"&gt;</td><td>&lt;img src="flower-large.jpg" srcset="flower-small.jpg 480w, flower-large.jpg 1080w" sizes="50vw"&gt;</td></tr></tbody></table></div>
        <p>The <code>&lt;img&gt;</code>' . " tag's" . ' <a href="https://developer.mozilla.org/docs/Web/HTML/Element/img#attr-src" rel="noopener"><code>src</code></a>, <a href="https://developer.mozilla.org/docs/Web/HTML/Element/img#attr-srcset" rel="noopener"><code>srcset</code></a>, and <a href="https://developer.mozilla.org/docs/Web/HTML/Element/img#attr-sizes" rel="noopener"><code>sizes</code></a> attributes all interact to achieve this end result.</p>',
        
        'unused-css-rules' => '<div class="default-padding how-to-fix-content">
        <h3>How to fixed this issue ?</h3>
        <div>
        <p>It is a good practice to move all the inline CSS rules into an external file in order to make your page "lighter" in weight and decrease the code to text ratio.</p>
        <ul>
        <li>check the HTML code of your page and identify all style attributes</li>
        <li>for each style attribute found you must properly move all declarations in the external CSS file and remove the style attribute</li>
        </ul><p><strong>For example:</strong></p>
        <div class="mcbBlockText mcbBlockGreen"><pre>&lt;!--this HTML code with inline CSS rule:--&gt;
        &lt;p style="color:red; font-size: 12px"&gt;some text here&lt;/p&gt;

        &lt;!--would became:--&gt;
        &lt;p&gt;some text here&lt;/p&gt;

        &lt;!--and the rule added into your CSS file:--&gt;
        p{color:red; font-size: 12px}
        </pre></div></div></div>',
        
        'uses-text-compression' => '<h2>How to enable text compression on your server</h2><p>Enable text compression on the server(s) that served these responses in order to pass this audit.</p><p>When a browser requests a resource, it will use the <a href="https://developer.mozilla.org/docs/Web/HTTP/Headers/Accept-Encoding"><code>Accept-Encoding</code></a> HTTP request header to indicate what compression algorithms it supports.</p><div class="mcbBlockText mcbBlockGreen language-text">Accept-Encoding: gzip, compress, br</div>',
        
        'uses-rel-preconnect' => '<h2>Improve page load speed with preconnect</h2>
        <p>Consider adding <code>preconnect</code> or <code>dns-prefetch</code> resource hints to establish early connections to important third-party origins.</p>
        Informing the browser of your intention is as simple as adding a link tag to your page:
        <div class="mcbBlockText mcbBlockGreen"><pre class="language-html">&lt;link rel="preconnect" href="https://example.com"&gt;</pre></div>
        <p><code>&lt;link rel="dns-prefetch"&gt;</code> is another <code>&lt;link&gt;</code> type related to 
        connections. ' . "This handles the DNS lookup only, but it's got wider browser support, so it may serve as a nice fallback. You use it the exact same way:" . '</p>
        <div class="mcbBlockText mcbBlockGreen"><pre><span class="tag token"><span class="tag token"><span class="punctuation token">&lt;</span>link</span> <span class="attr-name token">rel</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>dns-prefetch<span class="punctuation token">"</span></span> <span class="attr-name token">href</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>https://example.com<span class="punctuation token">"</span></span> <span class="punctuation token">/&gt;</span></span>.</pre></div>',
        
        'offscreen-images' => '  <h2>Optimizing Offscreen Images</h2>
        <h2>Use the <code>loading</code> Attribute</h2>
        <p> For offscreen images that are below the fold (not initially visible), you can use the <code>loading="lazy"</code> attribute to defer their loading until they are near the viewport.
        </p><h2>Set Width and Height Attributes</h2><p>Specify the width and height attributes in the <code>&lt;img&gt;</code> tag. This allows the browser to allocate the appropriate space for the image, preventing layout shifts when the image loads.
        </p><h2>Optimize Image Formats</h2><p>  Consider using modern image formats like WebP, which provide better compression and smaller file sizes without sacrificing image quality. You can use the <code>&lt;picture&gt;</code> element to provide fallbacks for different formats.
        </p><h2>Responsive Images</h2><p>' . " Use the <code>srcset</code> attribute to provide multiple image sources with different resolutions or sizes. Browsers can then choose the most appropriate image based on the device's screen size and resolution." . '
        </p> <h2>Use the <code>&lt;picture&gt;</code> Element</h2><p>  The <code>&lt;picture&gt;</code> element allows you to provide multiple image sources and select the most suitable one based on conditions like screen size and orientation.
        </p><h2>Set Aspect Ratio with Padding</h2><p>To prevent layout shifts, you can set a fixed aspect ratio for the container using padding-top. This is especially useful for cases where the image dimensions are unknown until load time.
        </p><h2>Preload Critical Images</h2><p> For images that are critical for the initial rendering of the page, you can use the <code>&lt;link rel="preload"&gt;</code> tag in the <code>&lt;head&gt;</code> section to preload them.
        </p> <h2>Lazy Load Background Images</h2><p> If you have background images in CSS, you can use the <code>background-image</code> property with the <code>url()</code> function and the <code>loading="lazy"</code> attribute.
        </p>',
        'unminified-css' => '<h2>How minifying CSS files can improve performance</h2>
        <p>Minifying CSS files can improve your page load performance. CSS files are often larger than they need to be. For example:</p>
        <div class="mcbBlockText mcbBlockGreen"><span class="comment token">/* Header background should match brand colors. */</span><br>
        <span class="selector token">h1</span> <span class="punctuation token">{</span>  <span class="property token">background-color
        </span><span class="punctuation token">:</span> #000000<span class="punctuation token">;</span><span class="punctuation token">}</span>
        <span class="selector token">h2</span> <span class="punctuation token">{</span>  <span class="property token">background-color</span>
        <span class="punctuation token">:</span> #000000<span class="punctuation token">;</span><span class="punctuation token">}
        </span></div><p>Can be reduced to:</p><div class="mcbBlockText mcbBlockGreen"><span class="selector token">h1,h2
        </span> <span class="punctuation token">{</span>  <span class="property token">background-color</span>
        <span class="punctuation token">:</span> #000000<span class="punctuation token">;</span>
        <span class="punctuation token">}</span></div>',

        'unminified-javascript'=>'<h2>How to minify your JavaScript files</h2>
        <p>Minification is the process of removing whitespace and any code that is not necessary to create a smaller but perfectly valid code file.</p><p> Terser is a popular JavaScript compression tool. webpack v4 includes a plugin for this library by default to create minified build files.</p>
        <ul><li>Reduces file size by removing unnecessary characters and whitespace.</li><li>Speeds up download and parsing times.</li><li>Improves overall page load times and user experience.</li><li>Can save bandwidth and improve SEO.</li><li>Can be done using tools, build systems, CDNs, and source maps.</li></ul>',
        'uses-optimized-images'=>'<h2>How to optimize images</h2><p>There are many steps you can take to optimize your images, including:</p>
        <ul><li>Using image CDNs</li><li>Compressing images</li><li>
        Replacing animated GIFs with video</li><li>Lazy loading images</li>
        <li>Serving responsive images</li><li>Serving images with correct dimensions</li><li>Using WebP images/li></ul>',
        
        'redirects'=>'<h2>How to eliminate redirects</h2><p>'."Point links to flagged resources to the resources' current locations. It's especially important to avoid redirects in resources required for your Critical Rendering Path.".
        '</p><p>'."If you're using redirects to divert mobile users to the mobile version of your page, consider redesigning your site to use Responsive Design.".'</p>',
        
        'uses-rel-preload'=>'<h2>Declare your preload links<h2><p>Declare preload links in your HTML to instruct the browser to download key resources as soon as possible.</p>
        <pre class="language-html"><code class="language-html"><span class="tag token"><span class="tag token"><span class="punctuation token">&lt;</span>head</span><span class="punctuation token">&gt;</span></span>  ...  <span class="tag token"><span class="tag token"><span class="punctuation token">&lt;</span>link</span> <span class="attr-name token">rel</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>preload<span class="punctuation token">"</span></span> <span class="attr-name token">href</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>styles.css<span class="punctuation token">"</span></span> <span class="attr-name token">as</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>style<span class="punctuation token">"</span></span> <span class="punctuation token">/&gt;</span></span>  <span class="tag token"><span class="tag token"><span class="punctuation token">&lt;</span>link</span> <span class="attr-name token">rel</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>preload<span class="punctuation token">"</span></span> <span class="attr-name token">href</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>ui.js<span class="punctuation token">"</span></span> <span class="attr-name token">as</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>script<span class="punctuation token">"</span></span> <span class="punctuation token">/&gt;</span></span>  ...<span class="tag token"><span class="tag token"><span class="punctuation token">&lt;/</span>head</span><span class="punctuation token">&gt;</span></span></code></pre>',
        
        'efficient-animated-content'=>'<h2>Why you should replace animated GIFs with video</h2><p>'."Large GIFs are inefficient for delivering animated content. By converting large GIFs to videos, you can save big on users' bandwidth. Consider using MPEG4/WebM videos for animations and PNG/WebP for static images instead of GIF to save network bytes.".'</p><h2>Replace the GIF image with a video</h2><p>Animated GIFs have three key traits that a video needs to replicate:</p><p>Luckily, you can recreate these behaviors using the <code>&lt;video&gt;</code> element.</p>
        <ul><li>They play automatically.</li><li>They loop continuously (usually, but it is possible to prevent looping).</li><li>'."They're silent.".'</li></ul><p>Luckily, you can recreate these behaviors using the <code>&lt;video&gt;</code> element.</p>
        <pre class="language-html"><code class="language-html"><span class="tag token"><span class="tag token"><span class="punctuation token">&lt;</span>video</span> <span class="attr-name token">autoplay</span> <span class="attr-name token">loop</span> <span class="attr-name token">muted</span> <span class="attr-name token">playsinline</span><span class="punctuation token">&gt;</span></span>  <span class="tag token"><span class="tag token"><span class="punctuation token">&lt;</span>source</span> <span class="attr-name token">src</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>my-animation.webm<span class="punctuation token">"</span></span> <span class="attr-name token">type</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>video/webm<span class="punctuation token">"</span></span> <span class="punctuation token">/&gt;</span></span>  <span class="tag token"><span class="tag token"><span class="punctuation token">&lt;</span>source</span> <span class="attr-name token">src</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>my-animation.mp4<span class="punctuation token">"</span></span> <span class="attr-name token">type</span><span class="attr-value token"><span class="attr-equals punctuation token">=</span><span class="punctuation token">"</span>video/mp4<span class="punctuation token">"</span></span> <span class="punctuation token">/&gt;</span></span><span class="tag token"><span class="tag token"><span class="punctuation token">&lt;/</span>video</span><span class="punctuation token">&gt;</span></span></code></pre>',
        
        'non-composited-animations'=>'<h2>Use CSS Transforms and Transitions</h2><p><pre><code>.animated-element {
            transform: translateX(100px);
            transition: transform 0.3s ease;
        }
        </code><pre></p><h2>Avoid Animating Non-Compositing Properties<h2><h2>Minimize Paint Operations<h2><h2>Use will-change Wisely</h2><pre>
        <code>
        .animated-element {
            will-change: transform, opacity;
        }
        <code></pre>',
        
        'third-party-facades'=>'<h2>Recommended facades</h2>
        <p style="font-size:12px;">In general, video embeds, social button widgets, and chat widgets can all employ the facade pattern.</p>
        <p style="font-size:12px;"> The list below offers our recommendations of open-source facades. When choosing a facade, take into account the balance between the size and feature set. You can also use a lazy iframe loader such as vb/lazyframe.</p>
        <p style="font-size:14px;">Lazy Loading with Facade Example</p>
        <div class="mcbBlockText mcbBlockGreen" style="font-size:12px;"><pre>'.htmlspecialchars('<!-- Placeholder image -->
            <img src="placeholder.jpg" data-src="third-party-image.jpg" alt="Lazy-loaded Image">
            <!-- Load the actual image on button click -->
            <button id="load-button">Load Image</button>
            <script>'."
            document.getElementById('load-button').addEventListener('click', function() {
                var lazyImage = document.querySelector('img[data-src]');
                if (lazyImage) {
                    lazyImage.setAttribute('src', lazyImage.getAttribute('data-src'));
                    lazyImage.removeAttribute('data-src');
                }
                });".'
                </script>').'</pre></div>',

        'critical-request-chains' =>'<h2>How to reduce the effect of critical request chains on performance</h2><p>Use the critical request chains audit results to target the resources that have the biggest effect on page load first:</p><ul><li>Minimize the number of critical resources: eliminate them, defer their download, mark them as <code>async</code>, and so on.</li><li>Optimize the number of critical bytes to reduce the download time (number of round trips).</li><li>Optimize the order in which the remaining critical resources are loaded: download all critical assets as early as possible to shorten the critical path length.</li></ul>',

        'user-timings'=>'<p>Making your web app fast and responsive is crucial for a good user experience. The first step in improving performance is identifying where time is being spent.</p>
        <p>'."The User Timing API gives you a way to measure your app's JavaScript performance. You do that by inserting API calls in your JavaScript and then extracting detailed timing data that you can use to optimize your code. You can access those data from JavaScript using the API or by viewing them on your Chrome DevTools Timeline Recordings.".'</p>',

        'prioritize-lcp-image'=>'
        <ul> <li>Identify the LCP image on your webpage.</li>
        <li>Add a <code>&lt;link&gt;</code> element with <code>rel="preload"</code> and <code>as="image"</code> in the <code>&lt;head&gt;</code> section of your HTML, specifying the <code>href</code>'." attribute with the LCP image's URL.</li>
        <li>"."Optimize the LCP image's format and size for web delivery.".'</li>
        <li>Optionally, use the <code>loading="eager"</code> attribute with the <code>&lt;img&gt;</code> element to ensure the image is loaded as soon as possible.</li>
        </ul>
        <p>'."Let's consider some hands-on examples for lcp:".'</p>
        <div class="mcbBlockText mcbBlockGreen"><pre><span class="token comment">&lt;!-- Load the stylesheet that will reference the LCP image. --&gt;
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/path/to/styles.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">

        &lt;!-- Preload the LCP image with a high fetchpriority so it starts loading with the stylesheet. --&gt;
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preload<span class="token punctuation">"</span></span> <span class="token attr-name">fetchpriority</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>high<span class="token punctuation">"</span></span> <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/path/to/hero-image.webp<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/webp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>

        '.htmlspecialchars('<!-- Optional: Use an <img> element with loading="eager" to ensure immediate loading -->
            <img src="path-to-your-lcp-image.jpg" alt="LCP Image" loading="eager">').'</pre></div>',

        'server-response-time' =>'<h2>Reduce initial server response time</h2>
        <p>Slow server response times affect performance.</p>
        <h3>How to improve server response times.</h3>
        <p>'."The first step to improving server response times is to identify the core conceptual tasks that your server must complete in order to return page content, and then measure how long each of these tasks takes. Once you've identified the longest tasks, search for ways to speed them up.".'</p>
        <p>There are many possible causes of slow server responses, and therefore many possible ways to improve:</p><ul><li>'."Optimize the server's application logic to prepare pages faster. If you use a server framework, the framework may have recommendations on how to do this.".'</li><li>Optimize how your server queries databases, or migrate to faster database systems.</li><li>Upgrade your server hardware to have more memory or CPU.</li></ul>',
        
        /* Seo Array */
        'Meta_Title'=>'<h2>Meta title </h2>
        <p> follow these steps to create an effective and SEO-friendly meta title for a web page</p>
        <ul><li>Keep it short, around 60 characters.</li><li>Include the primary keyword.</li><li>Write a brief, compelling description (about 150-160 characters).</li><li>Add your brand name, separated by a pipe or hyphen.</li><li>Avoid keyword stuffing and duplication.</li><li>Use SEO tools and analyze competitors for ideas.</li><li>Monitor and adjust based on performance and user behavior.</li></ul>
        <p>Example :</p><div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<title>[Primary Keyword] - [Brief Description] | [Brand Name]</title>').'</div>',

        'Meta_Description'=>'<h2>Meta Description </h2><p>To fix the meta description tag of a web page for better SEO and user engagement, follow these steps:</p>
        <ul><li>Keep it concise (around 150-160 characters).</li><li>Include target keywords.</li>
        <li>'."Be informative and relevant to the page's content.</li><li>Use actionable language and a call to action.".'
        </li><li>Avoid special characters, HTML tags, and keyword stuffing.</li>
        <li>Ensure each page has a unique meta description.</li>
        <li>Regularly update and monitor for improvements in click-through rates.</li>
        </ul>
        <div class="mcbBlockText mcbBlockGreen"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"description"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"'."A concise and informative description of your page's content. This is where you provide more context for the page.".'"</span> /&gt;</span>
        </div>',
        'Social_Media_Meta_Tags'=>'<h2>Social Media Meta Tags</h2><h3>Importance of Social Media Meta Tags</h3><p>Social media meta tags, such as Open Graph (for Facebook) and Twitter Cards, control how your content is displayed when shared on social platforms.</p>
        <p>These tags enable you to define the title, description, image, and other attributes for your shared content.</p>
        <h3>To fix social media meta tags for a web page, follow these steps:</h3>
        <ul><li>Implement Open Graph tags for Facebook with title, description, image, and URL.</li><li>Implement Twitter Card tags for Twitter with title, description, image, and URL.</li><li>Ensure images meet platform-specific dimensions.</li><li>Validate and test using platform-specific tools (e.g., Facebook Sharing Debugger and Twitter Card Validator).</li><li>Optimize for other platforms if needed.</li><li>Monitor and maintain the tags for accuracy.</li></ul> 
        Example: <div class="mcbBlockText mcbBlockGreen">
        <pre>'.htmlspecialchars('<!-- Open Graph Tags for Facebook -->
            <meta property="og:title" content="Your Title">
            <meta property="og:description" content="Your Description">
            <meta property="og:image" content="URL to Your Image">
            <meta property="og:url" content="URL to Your Page">

            <!-- Twitter Card Tags for Twitter -->
            <meta name="twitter:card" content="summary">
            <meta name="twitter:title" content="Your Title">
            <meta name="twitter:description" content="Your Description">
            <meta name="twitter:image" content="URL to Your Image">
            <meta name="twitter:url" content="URL to Your Page">').'
        </pre></div>',
        
        'Heading_Tags' => '<h2>Heading tags for better SEO and web page structure</h2><p>This webpage is not contains headings tags.</p>
        <strong>To fix heading tags:</strong>
        <ul><li>Use H1 for the main page title with your primary keyword.</li><li>Organize content with H2 for sections and H3 for subsections.</li><li>Keep headings concise and descriptive.</li><li>Avoid using headings solely for design.</li><li>Maintain a logical hierarchy (H2 &gt; H3 &gt; H4).</li><li>Incorporate keywords naturally.</li><li>Ensure semantic structure.</li><li>Enhance accessibility for all users.</li><li>Regularly review and update headings.</li></ul>
        <strong> Exaple :</strong>
        <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<h1>Main Page Title</h1>
            <p>Introductory content...</p>

            <h2>Section 1</h2>
            <p>Content for section 1...</p>

            <h3>Subsection 1.1</h3>
            <p>Content for subsection 1.1...</p>

            <h2>Section 2</h2>
            <p>Content for section 2...</p>').'</pre></div>',
        
        'Social_Media'=>'<p>You must connect your website with at least one major social network.</p><p> To do that, you must insert into your page some social networks plugins:</p>
        <div class="bold-blue">  <a href="https://developers.facebook.com/docs/plugins/like-button" target="_blank">Facebook Like Button</a>,
        <a href="https://developers.facebook.com/docs/plugins/share-button" target="_blank">Facebook Share Button</a>, 
        <a href="https://developers.facebook.com/docs/plugins/comments" target="_blank">Facebook Comments</a>, 
        <a href="https://dev.twitter.com/docs/tweet-button" target="_blank">Twitter Button</a>, 
        <a href="https://developers.google.com/gmail/api/guides" target="_blank">Gmail Button</a> or 
        <a href="http://business.pinterest.com/widget-builder/#do_pin_it_button" target="_blank">Pinterest Button</a> </div>',
        
        'robots.txt'=>'<p>Robots.txt is a text file placed in the root directory of your website to instruct search engine crawlers on which parts of your site should be crawled and indexed.</p><strong>To fix or optimize your <code>robots.txt</code> file:</strong>
        <ul><li><p>'."Create or edit the <code>robots.txt</code> file in the website's root directory.</p></li>
        <li><p>".'Use the "User-agent" directive to specify the search engines to which the rules apply. For example, "User-agent: Googlebot."</p></li>
        <li><p>Use "Disallow" to block specific directories or pages from being crawled by search engines. For example, "Disallow: /private/."</p></li>
        <li><p>Use "Allow" to grant permission for certain content to be crawled, especially if'." you've used.".' "Disallow" broadly. For example, "Allow: /public/</p></li>
        <li><p>Set "Crawl-delay" to control the rate of crawling by search engine bots.</p></li><li><p>Specify the location of your XML sitemap using the "Sitemap" directive.</p></li><li><p>'."Regularly review, test, and update the <code>robots.txt</code> file as needed to ensure it reflects your site's structure.</p></li><li><p>Prioritize security and avoid including sensitive information in the file.</p></li><li><p>Monitor your website for crawling or indexing issues related to your".'<code>robots.txt</code>.</p></li></ul>
        Example:<div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('User-agent: *
            Disallow: /private/
            Allow: /public/
            Crawl-delay: 5
            Sitemap: https://www.example.com/sitemap.xml').'</div>',
        
        'Sitemap'=>'<p>In order to pass you must create a sitemap.xml file for your website. Some of the best practices are listed below:</p><ul style="margin-top: 10px">
        <li>It is strongly recommended that you place your sitemap at the root directory of your website: <strong>http://yourwebsite.com/sitemap.xml</strong> But in some situations, you may want to produce different sitemaps for different paths on your site (e.g., security permission issues)</li><li>Sitemaps should be no larger than 10MB (10,485,760 bytes) and can contain a maximum of 50,000 URLs. This means that if your site contains more than 50,000 URLs or your sitemap is bigger than 10MB, you must create multiple sitemap files and use a <strong>Sitemap index file</strong></li><li>All URLs listed in the sitemap must reside on the same host as the sitemap. For instance, if the sitemap is located at <strong>http://www.yourwebsite.com/sitemap.xml</strong>,'." it can't include URLs from".'<strong>http://subdomain.yourwebsite.com</strong></li><li>Once you have created your sitemap, let search engines know about it by submitting directly to them, pinging them, or adding the sitemap location to your <strong>robots.txt</strong> file</li>
        <li>Sitemaps can be compressed using gzip, reducing bandwidth consumption</li></ul><p><strong>sitemap.xml example:</strong></p>
        <div class="mcbBlockText mcbBlockGreen">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
        &lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"&gt;
        &lt;url&gt;
        &lt;loc&gt;http://www.yourwebsite.com&lt;/loc&gt;
        &lt;lastmod&gt;2013-01-01&lt;/lastmod&gt;
        &lt;changefreq&gt;weekly&lt;/changefreq&gt;
        &lt;priority&gt;0.9&lt;/priority&gt;
        &lt;/url&gt;
        &lt;url&gt;
        &lt;loc&gt;http://www.yourwebsite.com/articles/100&lt;/loc&gt;
        &lt;changefreq&gt;weekly&lt;/changefreq&gt;
        &lt;/url&gt;
        &lt;url&gt;
        &lt;loc&gt;http://www.yourwebsite.com/articles/101&lt;/loc&gt;
        &lt;lastmod&gt;2013-01-02&lt;/lastmod&gt;
        &lt;changefreq&gt;weekly&lt;/changefreq&gt;
        &lt;/url&gt;
        &lt;url&gt;
        &lt;loc&gt;http://www.yourwebsite.com/articles/102&lt;/loc&gt;
        &lt;lastmod&gt;2013-01-02T13:00:12+00:00&lt;/lastmod&gt;
        &lt;priority&gt;0.5&lt;/priority&gt;
        &lt;/url&gt;
        &lt;/urlset&gt;
        </div>',
        'Image_Alt'=>'<p>You must add an <strong>alt</strong> attribute to every <strong>&lt;img&gt;</strong> tag used into your webpage.</p><p>An image with an alternate text specified is inserted using the following HTML line:</p><strong>Example:</strong><div class="mcbBlockText mcbBlockGreen">&lt;img src="image.png" alt="text_to_describe_your_image"&gt;</div>',
        
        'Responsive_Image'=>'<p>To create responsive images properly sized for different viewports:</p>
        <ul><li><p>Use the <code>srcset</code> attribute in your <code>&lt;img&gt;</code> tag to provide multiple image sources.</p></li><li><p>Include the <code>sizes</code> attribute to specify the displayed size in CSS pixels.</p></li><li><p>Optimize and compress images to reduce file size.</p></li><li><p>Apply <code>max-width: 100%</code> in CSS to images for responsive scaling.</p></li><li><p>Test images on various devices and screen sizes to ensure they display correctly.</p></li></ul>',
        
        'Image_Aspect_Ratio'=>'<p>Fixing the image aspect ratio on a website is essential for maintaining a visually pleasing and consistent design.</p>
        <p>You can do this by ensuring that images are displayed with the correct aspect ratio, preventing distortion. Here are some steps to help you fix image aspect ratios on your website.</p>
        <ul><li>Use images with correct dimensions to match their aspect ratio.</li><li>Set the <code>max-width: 100%</code> CSS property for images to make them responsive.</li><li>Wrap images in container divs and apply aspect ratio as padding or percentage.</li><li>Utilize CSS Flexbox or Grid for responsive layouts.</li><li>Consider JavaScript solutions for dynamic aspect ratio control.</li><li>Use the <code>srcset</code> attribute for responsive images.</li><li>Edit images with tools like Photoshop to adjust their aspect ratio.</li></ul>',

        'errors-in-console'=>'<p>'."Fixing errors in the browser's console, typically JavaScript errors, involves identifying the root cause of the error and resolving it in your website's code. ".'</p><p>
        </p><strong>'."Here's a general process for fixing errors in the console:".'</strong>
        <ul><li>Identify the error and understand the issue.</li><li>Inspect the code to locate the problem.</li><li>Debug the code using browser developer tools.</li><li>Fix the error in your code.</li><li>Test on different browsers for compatibility.</li><li>Check external dependencies and library versions.</li><li>Use a linter in your development environment.</li><li>Implement error monitoring in production.</li><li>Test and deploy your fixes.</li><li>Monitor and maintain your website to prevent future errors.</li></ul>',
        'speed-index'=>'<p>The Speed Index is a crucial performance metric that measures how quickly content is visually displayed during page load.</p><p>'."Improving the Speed Index involves optimizing various aspects of your website. Here's how to fix it".'</p>
        <ul><li>Optimize images by compressing and using modern formats.</li><li>Minimize and optimize CSS and JavaScript.</li><li>Leverage browser caching for static assets.</li><li>Reduce server response time.</li><li>Lazy load content.</li><li>Optimize critical rendering path.</li><li>Use efficient code and avoid unnecessary redirects.</li><li>Implement browser-side rendering for non-indexed content.</li><li>Monitor, test, and consider CDNs.</li><li>Ensure HTTP/2 support and responsive design.</li><li>Reduce third-party scripts and consider AMP for mobile.</li></ul>',
        
        'CSS_Caching'=>'<p>'."Fixing CSS caching involves ensuring that your website's Cascading Style Sheets (CSS) files are properly cached by the user's browser, reducing load times for subsequent visits.".'</p>
        <p>Here are the steps to fix CSS caching issues<p>
        <ul><li><p>Configure cache control headers (Cache-Control and Expires) on your web server to specify how long browsers should cache CSS files.</p>
        Example (Apache <code>.htaccess</code> file):<code><pre>'.htmlspecialchars('<FilesMatch "\.(css)$">
            Header set Cache-Control "max-age=31536000, public"
            </FilesMatch>').'</pre></code>
        </li><li><p>Use ETag and Last-Modified headers to help browsers validate whether the CSS file has changed.</p></li><li><p>Consider using Content Delivery Networks (CDNs) for efficient caching and distribution.</p></li><li><p>Implement versioned URLs or cache-busting parameters to force browsers to fetch updated CSS files.</p></li><li><p>Minify and compress CSS files to reduce their size.</p></li><li><p>Utilize HTTP/2 for faster file delivery.</p></li><li><p>'."Regularly test and monitor your website's performance and caching behavior.".'</p></li></ul>',
        
        'first-contentful-paint'=>'<p>To improve FCP, you should focus on optimizing the initial rendering of your web page. <p><p> Here are steps to fix First Contentful Paint:</p>
        <ul><li>Optimize images.</li><li>Prioritize above-the-fold content.</li><li>Minimize render-blocking resources.</li><li>Use asynchronous loading for JavaScript.</li><li>Reduce server response time.</li><li>Optimize CSS delivery.</li><li>Leverage browser caching.</li><li>Minimize third-party scripts.</li><li>Use CDNs.</li><li>Implement HTTP/2 and server push.</li><li>Use code splitting for JavaScript.</li><li>Implement responsive design.</li><li>Optimize the critical rendering path.</li><li>Optimize web fonts.</li><li>Implement lazy loading.</li><li>Test, monitor, and make continuous improvements.</li></ul>',
        
        'largest-contentful-paint'=>'<p>Largest Contentful Paint (LCP) is a critical performance metric that measures when the largest content element (typically an image or text block) becomes visible to the user.</p><p>'."To fix Largest Contentful Paint and improve your website's performance, follow these steps:".'</p>
        <ul><li>Optimize images.</li><li>Prioritize above-the-fold content.</li><li>Eliminate render-blocking resources.</li><li>Minimize server response time.</li><li>Optimize CSS delivery.</li><li>Leverage browser caching.</li><li>Minimize third-party scripts.</li><li>Use CDNs for faster content delivery.</li><li>Implement HTTP/2 and server push.</li><li>Use code splitting for JavaScript.</li><li>Employ responsive design.</li><li>Optimize the critical rendering path.</li><li>Use system fonts or preload web fonts.</li><li>Implement lazy loading for images.</li><li>Regularly test and monitor for continuous improvements.</li></ul>',
        'largest-contentful-paint-element'=>'<p>Largest Contentful Paint (LCP) is a critical performance metric that measures when the largest content element (typically an image or text block) becomes visible to the user.</p><p>'."To fix Largest Contentful Paint and improve your website's performance, follow these steps:".'</p>
        <ul><li>Optimize images.</li><li>Prioritize above-the-fold content.</li><li>Eliminate render-blocking resources.</li><li>Minimize server response time.</li><li>Optimize CSS delivery.</li><li>Leverage browser caching.</li><li>Minimize third-party scripts.</li><li>Use CDNs for faster content delivery.</li><li>Implement HTTP/2 and server push.</li><li>Use code splitting for JavaScript.</li><li>Employ responsive design.</li><li>Optimize the critical rendering path.</li><li>Use system fonts or preload web fonts.</li><li>Implement lazy loading for images.</li><li>Regularly test and monitor for continuous improvements.</li></ul>',
        
        'cumulative-layout-shift'=>'<p>A lower CLS score indicates a more stable and user-friendly experience. </p><p>'."To fix Cumulative Layout Shift and improve your website's visual stability, follow these steps:".'</p>
        <ul><li>Set initial dimensions for images and elements.</li>
        <li>Preload critical images and fonts.</li>
        <li>Implement lazy loading for off-screen images and videos.</li>
        <li>Avoid inserting new content above the fold after initial page load.</li>
        <li>Optimize ads and third-party content to prevent layout shifts.</li><li>Use CSS transitions for smooth animations.</li>
        <li>Identify and fix problematic elements causing layout shifts.</li><li>Implement the Cumulative Layout Shift API for real-time monitoring.</li>
        <li>'."Test and monitor your site for layout shifts regularly.</li><li>Refer to Web Vitals data and Google's recommendations for specific issues.".'</li></ul>',
        'URL_Canonicalization'=>'<p>'."URL canonicalization is the process of ensuring that a website's URLs are structured and presented in a consistent and search engine-friendly manner. ".'<p>
        <p> Proper URL canonicalization can help prevent duplicate content issues and improve SEO. </p><p>Here are steps to fix URL canonicalization issues:</p>
        <ul><li>Choose a preferred domain (with or without "www").</li>
        <li>Implement 301 redirects for the non-preferred domain.
        <p>Example (Apache .htaccess):</p>
        <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('RewriteEngine On
            RewriteCond %{HTTP_HOST} !^www\. [NC]
            RewriteRule ^(.*)$ https://www.%{HTTP_HOST}/$1 [R=301,L]').'</pre></div>
        </li>
        <li>Use consistent URL formats (lowercase/uppercase).</li>
        <li>Decide on trailing slashes and be consistent.</li>
        <li>Use canonical tags in HTML to specify preferred URLs.</li>
        <li>Avoid duplicate content and use canonical tags when necessary.</li><li>Minimize URL parameters.</li><li>Check and update settings in Google Search Console.</li><li>Regularly test and monitor for issues.</li><li>Update your sitemap.</li><li>Fix internal links to use canonical versions.</li><li>Review and update your robots.txt file.</li></ul>',
        
        'is-on-https'=>'<p>Fixing SSL issues and ensuring your website is served over HTTPS is crucial for security and SEO.</p> <p>Here are steps to address SSL checker and HTTPS-related problems:<p>
        <ul><li>Obtain and install an SSL certificate.</li><li>Check SSL installation with a tool.</li><li>Force HTTPS with server redirects.</li><li>Update internal and external links to HTTPS.</li><li>Address mixed content issues.</li><li>Implement Content Security Policy (CSP).</li><li>Add HTTP Strict Transport Security (HSTS) header.</li><li>Monitor SSL certificate expiration.</li><li>Secure SSL/TLS protocols.</li><li>Check CDN support for HTTPS.</li><li>Update search engine settings to prefer HTTPS.</li><li>Test and monitor regularly for issues.</li></ul>',
        
        'Mixed_Content_Test_(HTTP_over_HTTPS)'=>'<p>Mixed content occurs when a web page served over HTTPS includes resources (like images, scripts, or stylesheets) loaded over HTTP.</p>
        <p>To fix mixed content issues and ensure your site is secure, follow these steps:</p>
        <ul><li>Update all resource links to use HTTPS.</li><li>Use relative URLs for internal resources.</li><li>Implement a Content Security Policy (CSP).</li><li>Ensure third-party scripts and embeds use HTTPS.</li><li>Scan and identify mixed content on your site.</li><li>Review and update content in your CMS.</li><li>Test and monitor for mixed content regularly.</li><li>Replace insecure resources with secure ones.</li><li>Check and enforce HTTPS in SSL/TLS configuration.</li><li>Review and update third-party dependencies.</li><li>Verify CDNs and external services use HTTPS.</li></ul>',
        
        'HTTP2_Test'=>'<p>HTTP/2 is a protocol for secure and efficient data transfer between a web server and a web browser.</p><p>'."HTTP/2 is designed to make web browsing faster and more efficient, but it's important to ensure that your web server and website are properly configured to take full advantage of its benefits.".'</p>
        <p>To optimize HTTP/2:</p>
        '."<ul><li>Verify server support for HTTP/2.</li><li>Enable HTTP/2 in your server configuration.</li><li>Serve your site over HTTPS.</li><li>Keep your software up to date.</li><li>Optimize your website's resources.</li><li>Test performance using online tools.</li><li>Ensure your CDN supports HTTP/2.</li><li>Verify browser compatibility.</li><li>Monitor your website for issues and make adjustments as needed.</li></ul>",
        
        'csp-xss'=>'<div><p><strong>HSTS</strong> stands for <strong>HTTP Strict Transport Security</strong> 
        '."and it's a security header that was created as a way to force the browser to use secure connections when a site is running over".'
        <strong>HTTPS</strong>.</p>
        <p>'."When a user connects to a site using HTTPS, the website then encrypts the session with a secure sockets layer (SSL) certificate. One of the flaws associated with HTTPS is that it isn't entirely hack-proof: it leaves your site open to SSL stripping.</p><p> This often occurs with 301 redirects if a website relies on 301 redirects for switching from HTTP to HTTPS. While this doesn't seem like a big deal, it's those few milliseconds in between you really need to worry about because it leaves the site vulnerable to hackers who try to strip down your SSL certificate. The solution for this issue is to add a Strict Transport Security response header.".'</p>
        <p>An HSTS enabled server can include the following header in an HTTPS reply:</p>
        <div class="mcbBlockText mcbBlockGreen">Strict-Transport-Security: max-age=16070400; includeSubDomains</div></div>',
        
        'structured-data'=>'<p>HTML5 Microdata is an easy way to add semantic markup to your web pages. Search engines rely on this markup to improve the display of search results, making it easier for people to find the right web pages.</p><p>Here is a simple example of how to use HTML5 microdata in your contact web page:</p>
        <div class="mcbBlockText mcbBlockGreen"><pre style="margin: 10px 0px;">&lt;div itemscope itemtype="http://schema.org/Person"&gt;
        &lt;span itemprop="name"&gt;Joe Doe&lt;/span&gt;
        &lt;span itemprop="company"&gt;The Example Company&lt;/span&gt;
        &lt;span itemprop="tel"&gt;604-555-1234&lt;/span&gt;
        &lt;a itemprop="email" href="mailto:joe.doe@example.com"&gt;
        joe.doe@example.com
        &lt;/a&gt;
        &lt;/div&gt;</pre></div>',
        
        'Custom_404_Error_Page'=>'<p>Creating a custom 404 error page can be relatively simple or more complicated, depending on what technologies were used to build your website (your web server, framework used, etc)
        .</p><p>'."On your custom error page, you should provide relevant information to keep the user's attention so they remain on your website. Some steps to achieve this goal include:".'</p><ul><li>Adding links to your most important pages (your best articles articles/content, latest posts, etc.)</li>
        <li>If you have an e-commerce business, you can display special offers, product recommendations, discounts, etc.</li>
        <li>Include a search box or a sitemap link to help users find the information they wanted.</li>
        <li>Use simple language (non-technical) to explain what went wrong.</li>
        <li>Add a contact form or provide an email address to allow users to get in touch with you for further help.</li></ul>',
        
        'Canonical_Tag'=>'<p>The canonical tag is an HTML element used to address duplicate content issues and guide search engines to the preferred version of a webpage</p><span>Example:</span>
        <div class="mcbBlockText mcbBlockGreen"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"canonical"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.example.com/preferred-page"</span>/&gt;</span>
        </div>',
        
        'meta-refresh'=>'<p>'."Meta refresh is an HTML tag used to automatically redirect a web page to another URL after a specified time. It's not recommended for various reasons, including SEO and usability.".'</p>
        <span>To fix meta-refresh issues, consider using alternative methods for redirection.</span>
        <ul><li>Replace meta-refresh with server-side redirects (301 or 302) for SEO and usability.</li><li>Consider JavaScript redirects for better control.</li><li>Update internal links to point directly to new URLs.</li><li>Inform external sites of URL changes.</li><li>Review and remove unnecessary meta-refresh usage.</li><li>Test and monitor the effectiveness of your redirects.</li></ul>',
        
        'long-tasks'=>'<p>Long tasks on a webpage can slow down user interactions and negatively impact the user experience.</p><p>
        To fix long tasks and improve the performance of your website, follow these steps:</p>
        <ul><li>Identify and prioritize long tasks.</li><li>Optimize JavaScript and offload heavy tasks to Web Workers.</li><li>Implement lazy loading for non-essential resources.</li><li>Defer non-critical JavaScript.</li><li>Optimize CSS and use Critical CSS for above-the-fold content.</li><li>Optimize images and multimedia.</li><li>Reduce network requests through minification and HTTP/2.</li><li>Implement caching and use CDNs.</li><li>Use browser hints for resource loading.</li><li>Apply progressive rendering for a better user experience.</li><li>Continuously monitor performance and gather user feedback.</li></ul>',
        'select-name'=>'
        <ul>
        <li>Wrap each <code>&lt;select&gt;</code> element with a <code>&lt;label&gt;</code> element.
        <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<label for="selectElement">Choose an option:</label>
            <select id="selectElement" name="mySelect">
            <option value="option1">Option 1</option>
            <option value="option2">Option 2</option>
            <!-- Add more options -->
            </select>').'</pre></div>
        </li>
        <li>Ensure the <code>&lt;label&gt;</code> has a <code>for</code> attribute that matches the <code>id</code> of the <code>&lt;select&gt;</code> element.</li>
        <li>Use descriptive text in the <code>&lt;label</code> to explain the purpose of the <code>&lt;select</code>.</li>
        <li>If not needed for server-side processing, you can remove the <code>name</code> attribute from the <code>&lt;select&gt;</code> element.</li>
        </ul>',

        'aria-allowed-attr'=>'<ul>
        <li>Review your ARIA attributes and their usage.</li>
        <li>Remove any invalid ARIA attributes or custom attributes not recognized by assistive technologies.</li>
        <li>Ensure that ARIA attributes have the correct format and are associated with the right elements.</li>
        <li>Test for accessibility with tools and assistive technologies.</li>
        <li>Update your HTML code to use ARIA attributes correctly.</li>
        <li>Re-run Lighthouse to verify the fix.</li>
        <p>Example:</p>
        <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<button aria-label="Close" onclick="closeDialog()">X</button>').'</div>
        </ul>',

        'aria-allowed-role'=>'<ul><li>Review your ARIA roles and their usage.</li><li>Remove any invalid or inappropriate ARIA roles.</li><li>Prefer using semantic HTML elements when possible.</li><li>Test for accessibility using tools.</li><li>Update your HTML code to use ARIA roles correctly.</li><li>Re-run Lighthouse to verify the fix.</li></ul>
        <p>Example:</p>
        <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<div role="button" tabindex="0" onclick="performAction()">Click me</div>').'</div>',

        'color-contrast'=>'<p>To fix this issue, you should improve the color contrast between text and its background. Here are the steps to do so:</p>
        <ul><li>Identify affected elements with poor color contrast.</li><li>Learn the minimum contrast ratios required by accessibility standards (e.g., 4.5:1 for normal text).</li><li>Adjust the colors to improve the contrast.</li><li>Use online contrast checkers to validate your color choices.</li><li>Test with real users, especially those with visual impairments.</li><li>Update your CSS or styles to apply the new color scheme.</li><li>Re-run Lighthouse to confirm the issue is resolved.</li></ul>
        <br>'."Here's an example of how you might improve the color contrast for text:".'
        <div class="mcbBlockText mcbBlockGreen"><pre>/* Before: Low contrast, not meeting accessibility standards */
        .example-text {
          color: #999; /* Gray text on light background */
          background: #f5f5f5;
      }

      /* After: Improved contrast */
      .example-text {
          color: #333; /* Darker text on light background */
          background: #f5f5f5;
      }</pre></div>',

      'aria-valid-attr-value'=>'<ul>
      <li>Review your ARIA attributes and their usage.</li>
      <li>Remove any invalid ARIA attributes or custom attributes not recognized by assistive technologies.</li>
      <li>Ensure that ARIA attributes have the correct format and are associated with the right elements.</li>
      <li>Test for accessibility with tools and assistive technologies.</li>
      <li>Update your HTML code to use ARIA attributes correctly.</li>
      <li>Re-run Lighthouse to verify the fix.</li>
      <p>Example:</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<button aria-label="Close" onclick="closeDialog()">X</button>').'</div>
      </ul>',

      'duplicate-id-active'=>'<ul><li>Identify elements with duplicate <code>id</code> attributes.</li><li>Rename or remove the duplicated <code>id</code> attributes to make them unique.</li><li>'."Update links and references if needed.</li><li>Test for any impact on your page's functionality.".'</li></ul>',


      'aria-required-attr'=>'<ul>
      <li>Identify missing or incorrectly defined ARIA attributes.</li>
      <li>Add <code>aria-required="true"</code> to required form fields.
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<input type="text" aria-required="true">').'</div>
      </li>
      <li>Ensure valid labeling with <code>&lt;label&gt;</code> elements.
      <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<label for="username">Username:</label>
        <input type="text" id="username" aria-required="true">').'</pre></div>
      </li>
      <li>Test for accessibility.</li>
      </ul>',

      'aria-input-field-name'=>'<ul><li>Identify form fields without accessible names.</li><li>Add labels using <code>aria-label</code> or <code>aria-labelledby</code>.</li><li>Test for accessibility.</li></ul>',

      'uses-http2'=>'<p>HTTP/2 is a protocol for secure and efficient data transfer between a web server and a web browser.</p><p>'."HTTP/2 is designed to make web browsing faster and more efficient, but it's important to ensure that your web server and website are properly configured to take full advantage of its benefits.".'</p>
      <p>To optimize HTTP/2:</p>'."<ul><li>Verify server support for HTTP/2.</li><li>Enable HTTP/2 in your server configuration.</li><li>Serve your site over HTTPS.</li><li>Keep your software up to date.</li><li>Optimize your website's resources.</li><li>Test performance using online tools.</li><li>Ensure your CDN supports HTTP/2.</li><li>Verify browser compatibility.</li><li>Monitor your website for issues and make adjustments as needed.</li></ul>",

      'bf-cache'=> '<p>Configure your server to return the <code>Cache-Control</code> HTTP response header:</p>
      <pre class="language-js"><code class="language-js">Cache<span class="operator token">-</span>Control<span class="operator token">:</span> max<span class="operator token">-</span>age<span class="operator token">=</span><span class="number token">31536000</span></code></pre>' .
      '<p>The <code>max-age</code> directive tells the browser how long it should cache the resource in seconds.</p><p> This example sets the duration to <code>31536000</code>, which corresponds to 1 year: 60&nbsp;seconds × 60&nbsp;minutes × 24&nbsp;hours × 365&nbsp;days = 31536000&nbsp;seconds.</p>',

      'image-aspect-ratio'=>'<p>Fixing the image aspect ratio on a website is essential for maintaining a visually pleasing and consistent design.</p>
      <p>You can do this by ensuring that images are displayed with the correct aspect ratio, preventing distortion. Here are some steps to help you fix image aspect ratios on your website.</p>
      <ul><li>Use images with correct dimensions to match their aspect ratio.</li><li>Set the <code>max-width: 100%</code> CSS property for images to make them responsive.</li><li>Wrap images in container divs and apply aspect ratio as padding or percentage.</li><li>Utilize CSS Flexbox or Grid for responsive layouts.</li><li>Consider JavaScript solutions for dynamic aspect ratio control.</li><li>Use the <code>srcset</code> attribute for responsive images.</li><li>Edit images with tools like Photoshop to adjust their aspect ratio.</li></ul>',

      'deprecations'=>'<p>It indicates that your web page is using JavaScript APIs that are no longer recommended or supported due to being outdated or deprecated.</p>
      <ul>
      <li>Identify which APIs are deprecated.</li>
      <li>Replace the deprecated APIs with recommended, up-to-date alternatives.</li>
      <li>Update your JavaScript code accordingly.</li>
      </ul>
      <p>Replacing deprecated APIs with modern alternatives helps ensure the long-term compatibility and performance of your web page</p>',

      'valid-source-maps'=>'<p>It indicates that your web page references source maps, but they are not correctly formatted or are missing. </p>
      <p> Source maps are used to map minified or transpiled code back to the original source code, making debugging and error tracking easier.</p>
      <ul><li>'."Check and locate the references to source maps in your web page's source code.".'</li><li>Generate valid source maps if they are missing or invalid.</li><li>Ensure that source maps are correctly included and linked in your production code.</li><li>Test the source maps to verify their accuracy.</li><li>Re-run Lighthouse to confirm that the issue is resolved.</li></ul>
      <p>Valid and correctly linked source maps are essential for debugging and understanding your production code. </p>',

      'inspector-issues'=>'<p>JavaScript code that may impact its performance or functionality.</p>
      <ul><li>Identify and understand specific issues in your JavaScript code.</li><li>Review, optimize, and refactor the JavaScript code.</li><li>Use linters and code analysis tools to maintain code quality.</li><li>Test for cross-browser and cross-device compatibility.</li><li>Profile code performance and improve execution speed.</li><li>Implement proper error handling.</li></ul>',

      'list'=>'<p> To fix this issue, follow these steps:</p><ul><li>Review and correct the structure of your lists to contain only <code>&lt;li&gt;</code> elements.</li><li>Ensure that <code>&lt;script&gt;</code> and <code>&lt;template&gt;</code> elements are not mistakenly placed within lists.</li><li>Test and validate your web page.</li></ul>Example:<div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<ul>
        <li>List item 1</li>
        <li>List item 2</li>
        <li>List item 3</li>
        </ul>').'</pre></div>',

      'image-redundant-alt'=>'<p>It suggests that there are images on your web page with redundant or unnecessary <code>alt</code> text, which can negatively impact accessibility. To fix this issue, follow these steps:</p>
      <p>Properly managing <code>alt</code> text for images is crucial for web accessibility. It ensures that users with visual impairments can understand and interact with your content effectively.</p>
      <p> <p>To fix this issue, follow these steps</p>
      <ul>
      <li>Identify images with redundant <code>alt</code> text.</li>
      <li>Understand the image context and purpose.</li>
      <li>Remove or update <code>alt</code> text as needed.
      <p>'."If an image is purely decorative and doesn't convey content or information, remove the".' <code>alt</code> attribute or set it to an empty value:</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<img src="decorative-image.jpg" alt="">').'</div>
      <p>If an image contains meaningful content, ensure that the <code>alt</code>'."text accurately describes the image's content and context. Use descriptive text that conveys the image's purpose and meaning to users with disabilities.".'</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<img src="important-image.jpg" alt="A group of people working together in a conference room">').'</div>
      </li>
      <li>Test with screen readers.</li>
      </ul>',

      'link-name'=>'<p>Fixing links that do not have a discernible name is important for web accessibility, as it helps users with disabilities, including screen readers, understand the purpose of the link. </p><p> The discernible name should provide meaningful information about the linked content. </p>
      <ul>
      <li>Use clear and descriptive link text.</li>
      <li>Avoid duplicate link text.</li>
      <li>'."Don't use raw URLs as link text.".'
      <div class="mcbBlockText mcbBlockGreen">
      Instead of<br>
      '.htmlspecialchars('<a href="https://www.example.com">https://www.example.com</a>').'<br>
      Use:<br>
      '.htmlspecialchars('<a href="https://www.example.com">Visit Example.com</a>').'
      </div>
      </li>
      <li>If necessary, use ARIA labeling.</li><li>Ensure image links have descriptive alt text.</li><li>Test with screen readers.</li><li>Follow web accessibility guidelines.</li><li>Use semantic HTML elements.</li></ul>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<a href="https://www.example.com">Visit Example.com</a>').'</div>',

      'heading-order'=>'<p>'."Maintaining a well-structured heading hierarchy is essential for both SEO and accessibility. It helps search engines and screen readers understand the content's structure and provides a better user experience.".'</p>
      <ul><li>Identify heading elements in your HTML.</li>
      <li>Ensure that headings are structured hierarchically and logically.</li>
      <li>Reorder headings if necessary to create a hierarchical structure.
      <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<h1>Main Heading</h1>
        <h2>Subheading 1</h2>
        <h3>Sub-subheading 1.1</h3>
        <h3>Sub-subheading 1.2</h3>
        <h2>Subheading 2</h2>').'</pre></div>
      </li>
      <li>Validate and test the heading structure.</li>
      <li>Ensure semantic heading structure.</li>
      </ul>',

      'aria-command-name'=>'<p>To fix the <code>aria-command-name</code> attribute :</p>
      <ul><li><p>'."Ensure you're using the correct attribute:".' It should be <code>aria-label</code>, not <code>aria-command-name</code>.</p></li><li><p>Set the <code>aria-label</code> attribute on the relevant interactive element, like a button, to provide a brief and clear description of the command or action associated with that element.</p></li></ul>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<button aria-label="Save changes">Save</button>').'</div>
      <p>By using <code>aria-label</code>, you make the command or action associated with the element more accessible to users with disabilities who rely on screen readers.</p>',

      'aria-dialog-name'=>'<p>To fix <code>aria-dialog-name</code>:</p>
      <ul> <li>
      <p>Use <code>aria-label</code> to provide a descriptive label directly to the dialog element.</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<div role="dialog" aria-label="Edit Profile Information">
        <!-- Dialog content goes here -->
        </div>
        ').'</div><br>
      OR<br>
      </li>
      <li><p>Use <code>aria-labelledby</code> to reference an existing element (e.g., a heading) to provide a label for the dialog.</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<h2 id="edit-dialog-title">Edit Profile Information</h2>
        <div role="dialog" aria-labelledby="edit-dialog-title"><br>
        <!-- Dialog content goes here --><br>
        </div>').'</div>
      </li>
      </ul><p>These attributes make the dialog accessible by providing a label for screen reader users.</p>',

      'crawlable-anchors'=>'<p>'." If you're referring to making anchor links (HTML links) crawlable by search engines, the standard practice is to use clear and descriptive anchor text".'</p>
      <ul><li><p>Use Descriptive Anchor Text:</p><br>
      Instead of:
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<a href="https://www.example.com/page.html">Click here</a>').'</div>
      Use:
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<a href="https://www.example.com/page.html">Read the latest news</a>').'</div>
      </li></ul>
      <p>'."By using descriptive anchor text, search engines can better understand the content of the linked page, which can improve your website's search engine optimization (SEO).".'</p>',

      'no-document-write'=>'<ul>
      <li>Identify and replace instances of <code>document.write</code> with more modern DOM manipulation methods.</li>
      <li>Make sure your JavaScript code is executed at the right time, such as when the DOM has loaded.</li></ul>
      Example: 
      <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars("// Instead of document.write<br>
        document.getElementById('target').textContent = 'New content';").'</pre></div>
      <p>By using modern DOM manipulation techniques and controlling when your code runs, you can avoid issues associated with <code>document.write</code>.</p>',

      'lcp-lazy-loaded'=>'<p>Typically means that the largest element on your web page is loaded lazily or late, which can negatively impact the user experience and page performance.</p>
      <ul>
      <li><strong>Optimize Loading of Large Elements:</strong>
      Ensure that the largest elements on your page, such as images or videos, are loaded efficiently and not delayed.</li>
      <li><strong>Prioritize Loading:</strong>
      Prioritize loading critical elements needed for LCP, even if other non-essential elements are loaded lazily.</li>
      <li><strong>Lazy Load Responsibly:</strong>
      '."If you must use lazy loading for non-essential elements, make sure 'it doesn't af'fect the LCP. Lazy load images and other assets that don't impact the initial user experience.".'</li>
      <li><strong>Test and Monitor:</strong>
      Use tools like Lighthouse, PageSpeed Insights, or other web performance testing tools to identify and fix LCP issues. '."Monitor your page's performance and make adjustments as needed.".'</li>
      </ul>
      <p>'."By optimizing how large elements are loaded and prioritizing critical content, you can improve your web page's LCP and provide a better user experience.</p>",

      'link-in-text-block'=>'<p>Typically refers to a situation where a hyperlink is embedded within a block of text, but it might not be clear to users that the text is clickable.</p>
      <ul><li>Make the link text stand out visually, e.g., with different colors or underlining.</li>
      <li>Consider using visual cues like icons next to the link.</li>
      <li>'."Use descriptive link text that conveys the link's purpose.".'</li>
      <li>Test for accessibility, ensuring clear announcement by screen readers.</li>
      <li>Ensure good mobile usability with sufficient tap space.</li></ul>
      <p>By making the link more visually prominent and using descriptive link text, you can improve user understanding and engagement with the linked content.</p>',

      'listitem'=>'<ul><li>Use proper HTML structure with <code>&lt;ul&gt;</code> or <code>&lt;ol&gt;</code> for lists and <code>&lt;li&gt;</code> for list items.</li><li>Make list item labels descriptive.</li><li>Style list items for readability with CSS.</li><li>Test for accessibility and ensure proper screen reader announcements.</li><li>Consider using semantic HTML elements when appropriate.</li><li>Make sure list items are mobile-friendly.</li></ul>
      Example:<div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<ul>
        <li>Introduction to web accessibility</li>
        <li>Best practices for web design</li>
        <li>Testing for accessibility</li>
        </ul>').'</pre></div>',

      'link-text'=>'<p>'." If you're referring to making anchor links (HTML links) crawlable by search engines, the standard practice is to use clear and descriptive anchor text".'</p>
      <ul><li><p>Use Descriptive Anchor Text:</p><p>Instead of:</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<a href="https://www.example.com/page.html">Click here</a>').'</div>
      <p>Use:</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<a href="https://www.example.com/page.html">Read the latest news</a>').'</div>
      </li></ul>
      <p>'."By using descriptive anchor text, search engines can better understand the content of the linked page, which can improve your website's search engine optimization (SEO).".'</p>',

      'button-name'=>'<p>To fixn this you need to ensure that the text displayed on a button is clear, descriptive, and conveys the purpose or action associated with that button.</p>
      <ul><li>Use clear, descriptive text on the button that conveys its purpose.</li><li>Keep the text concise and specific.</li><li>Test for clarity and user expectations.</li><li>Use proper HTML and ensure accessibility.</li></ul>
      Example:<div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<button>Save Changes</button>').'</div>
      <p>'."By following these steps and providing clear and descriptive button names, you can enhance the user experience, improve user understanding of your website's functionality, and encourage meaningful interactions.".'</p>',

      'uses-passive-event-listeners'=>'<p>To address the this issue, you need to modify your JavaScript code to use passive event listeners when attaching event handlers to improve scrolling performance.</p>
      <p>Passive event listeners are optimized for better user experience by allowing the browser to scroll smoothly without waiting for event handlers.</p>
      <ul><li><p>Identify event listeners that may affect scrolling performance, typically touch or wheel events.</p></li><li><p>Modify the event listeners to use <code>{ passive: true }</code> to allow smooth scrolling without blocking.</p></li><li><p>Ensure compatibility with your specific use case.</p></li><li><p>Test and verify improved scrolling performance.</p></li></ul>
      <p>By using passive event listeners, you can enhance the scrolling experience on your web page.</p>',

      'label-content-name-mismatch'=>"<p>To fix you need to ensure that the text inside a form field's <code>&lt;label&gt;</code> element matches the content of the associated input element's <code>id</code> and/or <code>for</code> attribute.</p>".'
      <ul><li><p>Match the <code>for</code> attribute of the <code>&lt;label&gt;</code> to the <code>id</code> of the associated input element.
      OR
      Wrap the input element inside the <code>&lt;label&gt;</code>.</p></li><li><p>'."Ensure the label content is clear and descriptive to help users understand the input's purpose".'.</p></li></ul>
      <p>Example (matching IDs):</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<label for="email">Email:</label><br>
        <input type="text" id="email" name="email">').'</div>
      <p>By following these steps, you improve form accessibility and user understanding.</p>',

      'label'=>'<p>To ensure that form elements have associated labels in a concise manner:</p>
      <ul><li>Pair form elements with <code>&lt;label&gt;</code> elements.</li>
      <li>Use the <code>for</code> attribute in <code>&lt;label&gt;</code> elements that matches the <code>id</code> of the associated form element.</li>
      <li>Ensure labels are descriptive.</li>
      </ul>
      Example: <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<label for="email">Email:</label>
        <input type="email" id="email" name="email">').'</pre></div>',

      'meta-viewport'=>'<p>To fix this issue, ensure that your web page includes a properly configured <code>&lt;meta&gt;</code> viewport tag. This tag controls how the webpage is displayed on mobile devices, optimizing the layout and zooming.</p>
      <ul>
      <li><p><strong>Add the <code>&lt;meta&gt;</code> viewport tag</strong>: Include the following <code>&lt;meta&gt;</code> tag in the <code>&lt;head&gt;</code> section of your HTML document:</p><p>'."This tag configures the viewport to match the device's width and sets the initial zoom level to 100%, preventing unwanted zooming.".'</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<meta name="viewport" content="width=device-width, initial-scale=1">').'</div>
      </li>
      <li>'."<p><strong>Test Responsiveness</strong>: Test your website on different mobile devices and screen sizes to ensure that it displays correctly, with content adjusting to fit the viewport.</p>".'
      </li></ul>
      <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<!DOCTYPE html>
        <html>
        <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <!-- Other head content -->
        </head>
        <body>
        <!-- Your webpage content -->
        </body>
        </html>').'</pre></div>
      <p>Adding the meta viewport tag ensures that your website is responsive and adapts well to various mobile devices, improving the user experience.</p>',

      'duplicate-id-aria'=>'<p>To fix this issue, you should ensure that all HTML elements have unique <code>id</code> attributes and that ARIA attributes are properly associated with the correct elements.</p>
      <ul>
      <li><p>Locate and remove duplicate <code>id</code> attributes in your HTML elements to make each <code>id</code> unique.</p></li>
      <li><p>Ensure that ARIA attributes (e.g., <code>aria-labelledby</code>, <code>aria-describedby</code>) reference the correct and unique <code>id</code> attributes.</p></li>
      </ul> <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<!-- Before -->
        <div id="section1">Section 1 content</div>
        <div id="section1">Section 2 content</div>

        <!-- After (unique IDs) -->
        <div id="section1">Section 1 content</div>
        <div id="section2">Section 2 content</div>').'</pre></div>
      <p>By addressing duplicate IDs and ensuring proper ARIA associations, your web page will be more accessible and valid.</p>',

      'image-alt'=>'<p>To fix this issues (missing or inadequate alt text for images) in a concise manner:</p>
      <ul><li><p><strong>Add Descriptive Alt Text</strong>: For each image, provide alt text that concisely describes the'." image's content".' or function. If the image is purely decorative, use empty alt text (<code>alt=""</code>).</p><p>Example (with alt text):</p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<img src="example.jpg" alt="A beautiful sunset over a serene lake">').'</div>
      </li>
      <li><p><strong>Avoid Redundancy</strong>: '."Avoid using alt text that repeats the image's context if it's clear from the surrounding content.".'</p></li>
      <li><p><strong>Test for Accessibility</strong>: Use accessibility tools or screen readers to verify that the alt text is correctly announced and serves its purpose.</p></li></ul>
      <p>By providing meaningful alt text for images, you improve web accessibility and ensure that users with visual impairments can understand the content and context of your images.</p>',


      'frame-title'=>'<p>you should provide a descriptive and meaningful title to these elements.</p>
      <ul>
      <li>Add a <code>title</code> attribute with a descriptive label.</li>
      <li>Keep the title concise and informative.</li>
      </ul>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<iframe src="https://www.example.com" title="Example website"></iframe>').'</div>',


      'input-button-name'=>'<p>To fix the "input-button-name" issue, add a descriptive "name" attribute to your submit button or image input element to clearly indicate its purpose or the action it triggers. </p>
      <div class="mcbBlockText mcbBlockGreen">'.htmlspecialchars('<input type="submit" name="login" value="Login">').'</div>       
      <p>By providing descriptive "name" attributes for your submit buttons, you can improve accessibility and enhance the user experience by ensuring that the purpose of each button is clear and understandable.</p>',

      'aria-required-parent'=>'<p>To fix this issue, you need to ensure proper usage of ARIA attributes in conjunction with the required attribute in your HTML forms. </p>
      <ul><li>Add the <code>aria-required="true"</code> attribute to input fields within forms that are marked as "required" using the HTML <code>required</code> attribute.</li><li>Optionally, use the <code>aria-invalid</code> attribute to indicate the validity of input values (set to "false" for valid and "true" for invalid).</li></ul>
      <p>These ARIA attributes improve accessibility and help users understand form requirements and validation status.</p>',

      'legacy-javascript'=>'<p>To fixing this issue involves updating and modernizing your JavaScript code to adhere to current best practices and standards.</p>
      <ul><li>Update your JavaScript code to use modern ES6+ features.</li><li>Avoid global variables and use closures or modules.</li><li>Replace deprecated or obsolete features and functions.</li><li>Use event listeners instead of inline event handlers.</li><li>Use a JavaScript linter and code formatter.</li><li>Write tests and refactor your code.</li><li>Modernize APIs and libraries as needed.</li><li>Ensure browser compatibility with modern standards.</li><li>Provide clear documentation for your code.</li></ul>',

      'image-size-responsive'=>'<p>To fix this issue, you need to make sure that images on your website are responsive and adapt to various screen sizes and devices. Responsive images help improve user experience and performance.</p>
      <ul><li>Use CSS to set <code>max-width: 100%</code> on images.</li><li>Always specify <code>width</code> and <code>height</code> attributes for images.</li><li>Use the <code>srcset</code> attribute to provide multiple image sources for different screen sizes.</li><li>Consider the <code>&lt;picture&gt;</code> element for advanced image handling.</li><li>Optimize images for the web to reduce file size.</li><li>Test your website on various devices and screen sizes.</li><li>Ensure your website follows responsive design principles.</li></ul>
      <p>By implementing these practices, you can make your images responsive, which will enhance the user experience and improve website performance, particularly on mobile devices.</p>',

      'aria-roles'=>'<p>Fixing ARIA roles involves ensuring that they are used correctly and in accordance with the ARIA (Accessible Rich Internet Applications) specification. ARIA roles are used to enhance the accessibility of web content for individuals with disabilities, particularly for screen reader users. Here are some tips on how to fix ARIA roles:</p>
      <ul><li>Use ARIA roles only when necessary.</li><li>Choose appropriate roles for elements.</li><li>Ensure ARIA labels provide context.</li><li>Test with screen readers.</li><li>Keep ARIA roles up to date.</li><li>Follow ARIA Authoring Practices Guide.</li><li>Stay informed about web accessibility standards.</li></ul>
      <p>Remember that improving web accessibility goes beyond ARIA roles. It involves creating a user-friendly experience for all users, including those with disabilities.</p>',

      'tabindex'=>'<p>To fix this issue, you need to ensure that the order of focus for interactive elements on your webpage is logical and user-friendly.</p><p>
      This attribute is used to control the order in which elements receive focus when users navigate the page using the keyboard. Here are some steps to address this issue:</p>
      <ul><li>Avoid negative tabindex values.</li><li>Follow a natural tab order based on the page structure.</li><li>Set tabindex for custom dialogs or modals when needed.</li><li>Test keyboard navigation for logical focus order.</li><li>Use ARIA attributes for custom widgets.</li><li>Ensure semantic elements and attributes are used.</li><li>Implement semantic HTML for better accessibility.</li></ul>
      <p>By following these steps, you can create a more accessible and user-friendly keyboard navigation experience on your website.</p>',

      'aria-hidden-focus'=>'<p>The "aria-hidden-focus" issue typically relates to ensuring that elements with the <code>aria-hidden</code> attribute set to "true" are not focusable by keyboard navigation. To fix this issue, you should:</p>
      <ul><li>Ensure that elements with <code>aria-hidden="true"</code> are not focusable by keyboard navigation.</li><li>Remove focusable elements and <code>tabindex</code> attributes within <code>aria-hidden</code> elements.</li><li>Use a wrapper element if you need to group elements within <code>aria-hidden</code>.</li><li>Consider offscreen techniques to hide content visually while maintaining focusability.</li><li>Test keyboard navigation to ensure proper behavior.</li><li>Document the use of <code>aria-hidden</code> and other ARIA attributes for clarity and accessibility.</li></ul>
      <p>By implementing these practices, you can ensure that elements with <code>aria-hidden="true"</code> do not receive focus during keyboard navigation, improving the accessibility and user experience of your web content.</p>',

      'no-unload-listeners'=>'<p>This issue generally suggests that your web application uses unload event listeners. The unload event occurs when a user navigates away from a page or closes the browser window.</p>
      <p> While unload listeners can be useful for certain tasks, they can also lead to user experience problems, and some browsers restrict their use.</p>
      <p> To address this issue, consider the following steps:</p>
      <ul><li>Assess the necessity of unload event listeners and use them judiciously.</li><li>Consider using the <code>beforeunload</code> event for confirmation or critical tasks before leaving a page.</li><li>Minimize asynchronous actions during unload.</li><li>Limit the number of unload listeners.</li><li>Test the behavior of unload listeners in various browsers.</li><li>Clearly document their usage in your code for understanding and maintenance.</li></ul>
      Example:
      <div class="mcbBlockText mcbBlockGreen">pre>'.htmlspecialchars("window.addEventListener('beforeunload', function (event) {
// Perform necessary tasks or show a confirmation dialog.
// Use 'event.returnValue' to display a custom confirmation message.
        });").'</pre></div>
      <p>By following these steps, you can address the "no-unload-listeners" issue and ensure that any unload event listeners in your web application are used judiciously and responsibly.</p>',

      'html-has-lang'=>'<p>To fix the "HTML element does not have a <code>[lang]</code> attribute" issue, you simply need to add the <code>lang</code> attribute to your HTML <code>&lt;html&gt;</code> tag. The <code>lang</code> attribute is used to declare the language of the document.</p>
      <div class="mcbBlockText mcbBlockGreen"><pre>'.htmlspecialchars('<!DOCTYPE html>
        <html lang="en">
        <head>
        <!-- Your head content -->
        </head>
        <body>
        <!-- Your HTML content -->
        </body>
        </html>').'</pre></div>
      <p>Replace <code>"en"</code> with the appropriate language code for your content.</p>',

      'tap-targets'=>'<p>The term "tap targets" usually refers to elements on a webpage that users can tap or click, such as buttons, links, or interactive elements.</p>
      <p> To address issues related to tap targets, you typically want to ensure that these elements are appropriately sized and spaced to provide a good user experience, especially on touch devices.</p>
      <ul><li>Ensure tap targets (buttons, links) are at least 48x48 pixels.</li><li>Provide enough spacing between tap targets to prevent accidental clicks.</li><li>Use CSS to style tap targets for visual clarity.</li><li>Ensure tap targets are responsive for different screen sizes.</li><li>Test tap targets using browser tools or online testing tools.</li></ul>',
      
      'largest-contentful-paint-element'=>'<p>Largest Contentful Paint (LCP) is a critical performance metric that measures when the largest content element (typically an image or text block) becomes visible to the user.</p><p>'."To fix Largest Contentful Paint and improve your website's performance, follow these steps:".'</p>
      <ul><li>Optimize images.</li><li>Prioritize above-the-fold content.</li><li>Eliminate render-blocking resources.</li><li>Minimize server response time.</li><li>Optimize CSS delivery.</li><li>Leverage browser caching.</li><li>Minimize third-party scripts.</li><li>Use CDNs for faster content delivery.</li><li>Implement HTTP/2 and server push.</li><li>Use code splitting for JavaScript.</li><li>Employ responsive design.</li><li>Optimize the critical rendering path.</li><li>Use system fonts or preload web fonts.</li><li>Implement lazy loading for images.</li><li>Regularly test and monitor for continuous improvements.</li></ul>',
  ];
}